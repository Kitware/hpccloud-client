!function(e){var n={};function l(t){if(n[t])return n[t].exports;var o=n[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,l),o.l=!0,o.exports}l.m=e,l.c=n,l.d=function(e,n,t){l.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,n){if(1&n&&(e=l(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)l.d(t,o,function(n){return e[n]}.bind(null,o));return t},l.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(n,"a",n),n},l.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},l.p="",l(l.s=8)}([function(e,n){e.exports=function(e,n){return e[n]}},function(e,n,l){e.exports=l(22).default},function(e,n){e.exports=function(e){return e.join(" ")}},function(e,n,l){"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}n.__esModule=!0,n.extend=i,n.indexOf=function(e,n){for(var l=0,t=e.length;l<t;l++)if(e[l]===n)return l;return-1},n.escapeExpression=function(e){if("string"!=typeof e){if(e&&e.toHTML)return e.toHTML();if(null==e)return"";if(!e)return e+"";e=""+e}if(!s.test(e))return e;return e.replace(a,r)},n.isEmpty=function(e){return!e&&0!==e||!(!c(e)||0!==e.length)},n.createFrame=function(e){var n=i({},e);return n._parent=e,n},n.blockParams=function(e,n){return e.path=n,e},n.appendContextPath=function(e,n){return(e?e+".":"")+n};var o={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;","=":"&#x3D;"},a=/[&<>"'`=]/g,s=/[&<>"'`=]/;function r(e){return o[e]}function i(e){for(var n=1;n<arguments.length;n++)for(var l in arguments[n])Object.prototype.hasOwnProperty.call(arguments[n],l)&&(e[l]=arguments[n][l]);return e}var u=Object.prototype.toString;n.toString=u;var d=function(e){return"function"==typeof e};d(/x/)&&(n.isFunction=d=function(e){return"function"==typeof e&&"[object Function]"===u.call(e)}),n.isFunction=d;var c=Array.isArray||function(e){return!(!e||"object"!==t(e))&&"[object Array]"===u.call(e)};n.isArray=c},function(e,n){e.exports=function(e){return"bottomWall"===e?"wall":"patch"}},function(e,n,l){"use strict";n.__esModule=!0;var t=["description","fileName","lineNumber","message","name","number","stack"];function o(e,n){var l=n&&n.loc,a=void 0,s=void 0;l&&(e+=" - "+(a=l.start.line)+":"+(s=l.start.column));for(var r=Error.prototype.constructor.call(this,e),i=0;i<t.length;i++)this[t[i]]=r[t[i]];Error.captureStackTrace&&Error.captureStackTrace(this,o);try{l&&(this.lineNumber=a,Object.defineProperty?Object.defineProperty(this,"column",{value:s,enumerable:!0}):this.column=s)}catch(e){}}o.prototype=new Error,n.default=o,e.exports=n.default},function(e,n){function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var t;t=function(){return this}();try{t=t||Function("return this")()||(0,eval)("this")}catch(e){"object"===("undefined"==typeof window?"undefined":l(window))&&(t=window)}e.exports=t},function(e,n,l){"use strict";function t(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0,n.HandlebarsEnvironment=u;var o=l(3),a=t(l(5)),s=l(23),r=l(31),i=t(l(33));n.VERSION="4.0.11";n.COMPILER_REVISION=7;n.REVISION_CHANGES={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:"== 1.x.x",5:"== 2.0.0-alpha.x",6:">= 2.0.0-beta.1",7:">= 4.0.0"};function u(e,n,l){this.helpers=e||{},this.partials=n||{},this.decorators=l||{},s.registerDefaultHelpers(this),r.registerDefaultDecorators(this)}u.prototype={constructor:u,logger:i.default,log:i.default.log,registerHelper:function(e,n){if("[object Object]"===o.toString.call(e)){if(n)throw new a.default("Arg not supported with multiple helpers");o.extend(this.helpers,e)}else this.helpers[e]=n},unregisterHelper:function(e){delete this.helpers[e]},registerPartial:function(e,n){if("[object Object]"===o.toString.call(e))o.extend(this.partials,e);else{if(void 0===n)throw new a.default('Attempting to register a partial called "'+e+'" as undefined');this.partials[e]=n}},unregisterPartial:function(e){delete this.partials[e]},registerDecorator:function(e,n){if("[object Object]"===o.toString.call(e)){if(n)throw new a.default("Arg not supported with multiple decorators");o.extend(this.decorators,e)}else this.decorators[e]=n},unregisterDecorator:function(e){delete this.decorators[e]}};var d=i.default.log;n.log=d,n.createFrame=o.createFrame,n.logger=i.default},function(e,n,l){(function(n){n.Simput||(n.Simput={}),n.Simput.types||(n.Simput.types={}),e.exports=n.Simput.types["openfoam-windtunnel"]=l(9)}).call(this,l(6))},function(e,n,l){e.exports={type:"openfoam-windtunnel",model:l(10),lang:l(11),convert:l(17),hooks:null,parse:null}},function(e){e.exports={order:["InitialConditions","WindTunnel","Parameters","Solvers","Decomposition","Mesh","Runtime"],views:{InitialConditions:{attributes:["initconst","initfields","transport"]},WindTunnel:{attributes:["wallBounds","wallAssign"]},Parameters:{attributes:["controldictTime","controldictWrite"]},Solvers:{attributes:["solver-p","solver-U","solver-k","solver-omega","correctors","relaxationFactors"]},Decomposition:{attributes:["decomposeParDict","decomposition_simpleCoeffs","decomposition_hierarchicalCoeffs","forceCoeffs"]},Mesh:{attributes:["meshSize","meshQuality","meshRefinement"]},Runtime:{children:["castellatedMeshControls","snapControls","addLayersControls"]},castellatedMeshControls:{attributes:["castellatedMeshControls"]},snapControls:{attributes:["snapControls"]},addLayersControls:{attributes:["addLayersControls"]}},external:{meshName:"motorBike",meshBounds:[-.292,1.75,-.35,.332,-423e-7,1.35]},definitions:{initconst:{parameters:[{id:"initialConditions.flowVelocity",type:"double",size:3,layout:"3",default:[20,0,0]},{id:"initialConditions.pressure",type:"double",size:1,default:[0]},{id:"initialConditions.turbulentKE",type:"double",size:1,default:[.24]},{id:"initialConditions.turbulentOmega",type:"double",size:1,default:[1.78]}]},initfields:{parameters:[{id:"fields.k.dimensions",type:"double",size:7,layout:"n",default:[0,2,-2,0,0,0,0]},{id:"fields.nut.dimensions",type:"double",size:7,layout:"n",default:[0,2,-1,0,0,0,0]},{id:"fields.omega.dimensions",type:"double",size:7,layout:"n",default:[0,0,-1,0,0,0,0]},{id:"fields.p.dimensions",type:"double",size:7,layout:"n",default:[0,2,-2,0,0,0,0]},{id:"fields.U.dimensions",type:"double",size:7,layout:"n",default:[0,1,-1,0,0,0,0]},{id:"fields.U.inletValue",type:"double",size:3,layout:"3",default:[0,0,0]}]},transport:{parameters:[{id:"transport.model",type:"string",ui:"enum",size:1,default:["Newtonian"],domain:{Newtonian:"Newtonian",BirdCarreau:"BirdCarreau",CrossPowerLaw:"CrossPowerLaw",powerLaw:"powerLaw",HerschelBulkley:"HerschelBulkley",Casson:"Casson"}},["Newtonian","BirdCarreau","CrossPowerLaw","powerLaw","HerschelBulkley","Casson"]],children:{Newtonian:"transport['transport.model'][0] === 'Newtonian'",BirdCarreau:"transport['transport.model'][0] === 'BirdCarreau'",CrossPowerLaw:"transport['transport.model'][0] === 'CrossPowerLaw'",powerLaw:"transport['transport.model'][0] === 'powerLaw'",HerschelBulkley:"transport['transport.model'][0] === 'HerschelBulkley'",Casson:"transport['transport.model'][0] === 'Casson'"}},Newtonian:{parameters:[{id:"Newtonian.nu.dimensions",type:"double",size:7,layout:"n",default:[0,2,-1,0,0,0,0]},{id:"Newtonian.nu.epsilon",type:"double",size:1,default:15e-6}]},BirdCarreau:{parameters:[{id:"BirdCarreau.nu0.dimensions",type:"double",size:7,layout:"n",default:[0,2,-1,0,0,0,0]},{id:"BirdCarreau.nu0.epsilon",type:"double",size:1,default:.001},{id:"BirdCarreau.nuInf.dimensions",type:"double",size:7,layout:"n",default:[0,2,-1,0,0,0,0]},{id:"BirdCarreau.nuInf.epsilon",type:"double",size:1,default:1e-5},{id:"BirdCarreau.k.dimensions",type:"double",size:7,layout:"n",default:[0,0,1,0,0,0,0]},{id:"BirdCarreau.k.epsilon",type:"double",size:1,default:1},{id:"BirdCarreau.n.dimensions",type:"double",size:7,layout:"n",default:[0,0,0,0,0,0,0]},{id:"BirdCarreau.n.epsilon",type:"double",size:1,default:.5}]},CrossPowerLaw:{parameters:[{id:"CrossPowerLaw.nu0.dimensions",type:"double",size:7,layout:"n",default:[0,2,-1,0,0,0,0]},{id:"CrossPowerLaw.nu0.epsilon",type:"double",size:1,default:.001},{id:"CrossPowerLaw.nuInf.dimensions",type:"double",size:7,layout:"n",default:[0,2,-1,0,0,0,0]},{id:"CrossPowerLaw.nuInf.epsilon",type:"double",size:1,default:1e-5},{id:"CrossPowerLaw.m.dimensions",type:"double",size:7,layout:"n",default:[0,0,1,0,0,0,0]},{id:"CrossPowerLaw.m.epsilon",type:"double",size:1,default:1},{id:"CrossPowerLaw.n.dimensions",type:"double",size:7,layout:"n",default:[0,0,0,0,0,0,0]},{id:"CrossPowerLaw.n.epsilon",type:"double",size:1,default:.5}]},powerLaw:{parameters:[{id:"powerLaw.nuMax.dimensions",type:"double",size:7,layout:"n",default:[0,2,-1,0,0,0,0]},{id:"powerLaw.nuMax.epsilon",type:"double",size:1,default:.001},{id:"powerLaw.nuMin.dimensions",type:"double",size:7,layout:"n",default:[0,2,-1,0,0,0,0]},{id:"powerLaw.nuMin.epsilon",type:"double",size:1,layout:"n",default:1e-5},{id:"powerLaw.k.dimensions",type:"double",size:7,layout:"n",default:[0,2,-1,0,0,0,0]},{id:"powerLaw.k.epsilon",type:"double",size:1,default:1e-5},{id:"powerLaw.n.dimensions",type:"double",size:7,layout:"n",default:[0,0,0,0,0,0,0]},{id:"powerLaw.n.epsilon",type:"double",size:1,default:1}]},HerschelBulkley:{parameters:[{id:"HerschelBulkley.nu0.dimensions",type:"double",size:7,layout:"n",default:[0,2,-1,0,0,0,0]},{id:"HerschelBulkley.nu0.epsilon",type:"double",size:1,default:.001},{id:"HerschelBulkley.tau0.dimensions",type:"double",size:7,layout:"n",default:[0,2,-2,0,0,0,0]},{id:"HerschelBulkley.tau0.epsilon",type:"double",size:1,default:1},{id:"HerschelBulkley.k.dimensions",type:"double",size:7,layout:"n",default:[0,2,-1,0,0,0,0]},{id:"HerschelBulkley.k.epsilon",type:"double",size:1,default:1e-5},{id:"HerschelBulkley.n.dimensions",type:"double",size:7,layout:"n",default:[0,0,0,0,0,0,0]},{id:"HerschelBulkley.n.epsilon",type:"double",size:1,default:1}]},Casson:{parameters:[{id:"Casson.m.dimensions",type:"double",size:7,layout:"n",default:[0,2,-1,0,0,0,0]},{id:"Casson.m.epsilon",type:"double",size:1,default:3934986e-12},{id:"Casson.tau0.dimensions",type:"double",size:7,layout:"n",default:[0,2,-2,0,0,0,0]},{id:"Casson.tau0.epsilon",type:"double",size:1,default:29032e-10},{id:"Casson.nuMax.dimensions",type:"double",size:7,layout:"n",default:[0,2,-1,0,0,0,0]},{id:"Casson.nuMax.epsilon",type:"double",size:1,default:133333e-10},{id:"Casson.nuMin.dimensions",type:"double",size:7,layout:"n",default:[0,2,-1,0,0,0,0]},{id:"Casson.nuMin.epsilon",type:"double",size:1,default:39047e-10}]},wallBounds:{parameters:[{id:"tunnel.bounds.x",type:"double",size:2,layout:"2",default:[-5,15]},{id:"tunnel.bounds.y",type:"double",size:2,layout:"2",default:[-4,4]},{id:"tunnel.bounds.z",type:"double",size:2,layout:"2",default:[0,8]}]},wallAssign:{parameters:[{id:"tunnel.walls.x.plus",type:"string",ui:"enum",size:1,default:["outlet"],domain:{outlet:"outlet",inlet:"inlet",leftWall:"leftWall",rightWall:"rightWall",topWall:"topWall",bottomWall:"bottomWall"}},{id:"tunnel.walls.x.minus",type:"string",ui:"enum",size:1,default:["inlet"],domain:{outlet:"outlet",inlet:"inlet",leftWall:"leftWall",rightWall:"rightWall",topWall:"topWall",bottomWall:"bottomWall"}},{id:"tunnel.walls.y.plus",type:"string",ui:"enum",size:1,default:["rightWall"],domain:{outlet:"outlet",inlet:"inlet",leftWall:"leftWall",rightWall:"rightWall",topWall:"topWall",bottomWall:"bottomWall"}},{id:"tunnel.walls.y.minus",type:"string",ui:"enum",size:1,default:["leftWall"],domain:{outlet:"outlet",inlet:"inlet",leftWall:"leftWall",rightWall:"rightWall",topWall:"topWall",bottomWall:"bottomWall"}},{id:"tunnel.walls.z.plus",type:"string",ui:"enum",size:1,default:["topWall"],domain:{outlet:"outlet",inlet:"inlet",leftWall:"leftWall",rightWall:"rightWall",topWall:"topWall",bottomWall:"bottomWall"}},{id:"tunnel.walls.z.minus",type:"string",ui:"enum",size:1,default:["bottomWall"],domain:{outlet:"outlet",inlet:"inlet",leftWall:"leftWall",rightWall:"rightWall",topWall:"topWall",bottomWall:"bottomWall"}}]},controldictTime:{parameters:[{id:"controldictTimeStartFrom",type:"string",ui:"enum",size:1,default:["startTime"],domain:{startTime:"startTime",firstTime:"firstTime",latestTime:"latestTime"}},{id:"controldict.time.startTime",type:"double",size:1,default:[0],show:"controldictTimeStartFrom[0] === 'startTime'"},{id:"controldict.time.end",type:"double",size:1,default:[500]},{id:"controldict.time.delta",type:"double",size:1,default:[1]}]},controldictWrite:{parameters:[{id:"controldict.write.control",type:"string",ui:"enum",size:1,default:["timeStep"],domain:{timeStep:"timeStep",runTime:"runTime",adjustableRunTime:"adjustableRunTime",cpuTime:"cpuTime",clockTime:"clockTime"}},{id:"controldict.write.interval",type:"double",size:1,default:[100]},{id:"controldict.write.format",type:"string",ui:"enum",size:1,default:["binary"],domain:{ascii:"ascii",binary:"binary"}},{id:"controldict.write.precision",type:"integer",size:1,default:[6]},{id:"controldict.write.gzip",type:"string",ui:"enum",size:1,default:["yes"],domain:{yes:"yes",no:"no"}},{id:"controldict.write.time.format",type:"string",ui:"enum",size:1,default:["general"],domain:{general:"general",fixed:"fixed",scientific:"scientific"}},{id:"controldict.write.time.precision",type:"integer",size:1,default:[6]},{id:"controldict.write.graph.format",type:"string",ui:"enum",size:1,default:["raw"],domain:{raw:"raw",gnuplot:"gnuplot",xmgr:"xmgr",jplot:"jplot"}}]},decomposeParDict:{parameters:[{id:"decomposeParDict.subdomains",type:"integer",size:1,default:[6]},{id:"decomposeParDict.method",type:"string",ui:"enum",size:1,default:["hierarchical"],domain:{hierarchical:"hierarchical",ptscotch:"ptscotch"}}]},decomposition_simpleCoeffs:{parameters:[{id:"decomposeParDict.simpleCoeffs.n",type:"double",size:3,layout:"3",default:[4,1,1]},{id:"decomposeParDict.simpleCoeffs.delta",type:"double",size:1,default:[.001]}]},decomposition_hierarchicalCoeffs:{parameters:[{id:"decomposeParDict.hierarchicalCoeffs.n",type:"double",size:3,layout:"3",default:[3,2,1]},{id:"decomposeParDict.hierarchicalCoeffs.delta",type:"double",size:1,default:[.001]},{id:"decomposeParDict.hierarchicalCoeffs.order",type:"string",ui:"enum",size:1,default:["xyz"],domain:{xyz:"xyz",xzy:"xzy",yxz:"yxz",yzx:"yzx",zyx:"zyx",zxy:"zxy"}}]},forceCoeffs:{parameters:[{id:"forceCoeffs.write.control",type:"string",ui:"enum",size:1,default:["timeStep"],domain:{timeStep:"timeStep",runTime:"runTime",adjustableRunTime:"adjustableRunTime",cpuTime:"cpuTime",clockTime:"clockTime"}},{id:"forceCoeffs.write.interval",type:"double",size:1,default:[1]},{id:"forceCoeffs.write.log",type:"string",ui:"enum",size:1,default:["yes"],domain:{yes:"yes",no:"no"}},{id:"forceCoeffs.liftDir",type:"double",size:3,layout:"3",default:[0,0,1]},{id:"forceCoeffs.dragDir",type:"double",size:3,layout:"3",default:[1,0,0]},{id:"forceCoeffs.CofR",type:"double",size:3,layout:"3",default:[.72,0,0]},{id:"forceCoeffs.pitchAxis",type:"double",size:3,layout:"3",default:[0,1,0]},{id:"forceCoeffs.magUInf",type:"double",size:1,default:[20]},{id:"forceCoeffs.lRef",type:"double",size:1,default:[1.42]},{id:"forceCoeffs.Aref",type:"double",size:1,default:[.75]}]},"solver-p":{parameters:[{id:"solver.p.solver",type:"string",ui:"enum",size:1,default:["GAMG"],domain:{GAMG:"GAMG",smoothSolver:"smoothSolver",PBiCG:"PBiCG"}},{id:"solver.p.smoother",type:"string",ui:"enum",size:1,default:["GaussSeidel"],domain:{GaussSeidel:"Gauss-Seidel","symmetric Gauss-Seidel":"symGaussSeidel","diagonal incomplete-Cholesky (symmetric), incomplete-LU (asymmetric)":"DIC/DILU","diagonal incomplete-Cholesky/LU with Gauss-Seidel (symmetric/asymmetric)":"DICGaussSeidel"}},{id:"solver.p.tolerance",type:"double",size:1,default:[1e-7]},{id:"solver.p.relTol",type:"double",size:1,default:[.01]}]},"solver-U":{parameters:[{id:"solver.U.solver",type:"string",ui:"enum",size:1,default:["smoothSolver"],domain:{GAMG:"GAMG",smoothSolver:"smoothSolver",PBiCG:"PBiCG"}},{id:"solver.U.smoother",type:"string",ui:"enum",size:1,default:["GaussSeidel"],domain:{GaussSeidel:"Gauss-Seidel",symGaussSeidel:"symmetric Gauss-Seidel","DIC/DILU":"diagonal incomplete-Cholesky (symmetric), incomplete-LU (asymmetric)",DICGaussSeidel:"diagonal incomplete-Cholesky/LU with Gauss-Seidel (symmetric/asymmetric)"}},{id:"solver.U.tolerance",type:"double",size:1,default:[1e-8]},{id:"solver.U.relTol",type:"double",size:1,default:[.1]},{id:"solver.U.nSweeps",type:"integer",size:1,default:[1]}]},"solver-k":{parameters:[{id:"solver.k.solver",type:"string",ui:"enum",size:1,default:["smoothSolver"],domain:{GAMG:"GAMG",smoothSolver:"smoothSolver",PBiCG:"PBiCG"}},{id:"solver.k.smoother",type:"string",ui:"enum",size:1,default:["GaussSeidel"],domain:{GaussSeidel:"Gauss-Seidel",symGaussSeidel:"symmetric Gauss-Seidel","DIC/DILU":"diagonal incomplete-Cholesky (symmetric), incomplete-LU (asymmetric)",DICGaussSeidel:"diagonal incomplete-Cholesky/LU with Gauss-Seidel (symmetric/asymmetric)"}},{id:"solver.k.tolerance",type:"double",size:1,default:[1e-8]},{id:"solver.k.relTol",type:"double",size:1,default:[.1]},{id:"solver.k.nSweeps",type:"integer",size:1,default:[1]}]},"solver-omega":{parameters:[{id:"solver.omega.solver",type:"string",ui:"enum",size:1,default:["smoothSolver"],domain:{GAMG:"GAMG",smoothSolver:"smoothSolver",PBiCG:"PBiCG"}},{id:"solver.omega.smoother",type:"string",ui:"enum",size:1,default:["GaussSeidel"],domain:{GaussSeidel:"Gauss-Seidel",symGaussSeidel:"symmetric Gauss-Seidel","DIC/DILU":"diagonal incomplete-Cholesky (symmetric), incomplete-LU (asymmetric)",DICGaussSeidel:"diagonal incomplete-Cholesky/LU with Gauss-Seidel (symmetric/asymmetric)"}},{id:"solver.omega.tolerance",type:"double",size:1,default:[1e-8]},{id:"solver.omega.relTol",type:"double",size:1,default:[.1]},{id:"solver.omega.nSweeps",type:"integer",size:1,default:[1]}]},correctors:{parameters:[{id:"correctors.simple.nNonOrthogonalCorrectors",type:"double",size:1,default:[0]},{id:"correctors.simple.consistent",type:"string",ui:"enum",size:1,default:["yes"],domain:{yes:"yes",no:"no"}},{id:"correctors.potentialFlow.nNonOrthogonalCorrectors",type:"double",size:1,default:[10]}]},relaxationFactors:{parameters:[{id:"relaxationFactors.equations.U",type:"double",size:1,default:[.9]},{id:"relaxationFactors.equations.k",type:"double",size:1,default:[.7]},{id:"relaxationFactors.equations.omega",type:"double",size:1,default:[.7]}]},meshQuality:{parameters:[{id:"meshQuality.minFaceWeight",type:"double",size:1,default:[.02]}]},meshSize:{parameters:[{id:"meshSize.dimensions",type:"integer",size:3,layout:"3",default:[10,10,10]},{id:"meshSize.simpleGrading",type:"integer",size:3,layout:"3",default:[1,2,3]}]},meshRefinement:{parameters:[{id:"meshRefinement.refinementBox.type",type:"string",ui:"enum",size:1,default:["searchableBox"],domain:{searchableBox:"searchableBox",searchableSphere:"searchableSphere"}},["searchableBox","searchableSphere"]],children:{searchableBox:"meshRefinement['meshRefinement.refinementBox.type'][0] === 'searchableBox'",searchableSphere:"meshRefinement['meshRefinement.refinementBox.type'][0] === 'searchableSphere'"}},searchableBox:{parameters:[{id:"meshRefinement.refinementBox.min",type:"double",size:3,layout:"3",default:[-1,-.7,0]},{id:"meshRefinement.refinementBox.max",type:"double",size:3,layout:"3",default:[8,.7,2.5]}]},searchableSphere:{parameters:[{id:"meshRefinement.refinementSphere.center",type:"double",size:3,layout:"3",default:[0,0,0]},{id:"meshRefinement.refinementSphere.radius",type:"double",size:1,default:[1.05]}]},runtime:{parameters:[{id:"runtime.step",type:"string",ui:"enum",size:1,default:["castellatedMesh"],domain:{castellatedMesh:"castellatedMesh",snap:"snap",addLayers:"addLayers"}},["castellatedMeshControls","snapControls","addLayersControls"]],children:{castellatedMeshControls:"runtime['runtime.step'][0] === 'castellatedMesh'",snapControls:"runtime['runtime.step'][0] === 'snap'",addLayersControls:"runtime['runtime.step'][0] === 'addLayers'"}},castellatedMeshControls:{parameters:[{id:"castellatedMeshControls.maxLocalCells",type:"integer",size:1,default:[1e5]},{id:"castellatedMeshControls.maxGlobalCells",type:"integer",size:1,default:[2e6]},{id:"castellatedMeshControls.minRefinementCells",type:"integer",size:1,default:[10]},{id:"castellatedMeshControls.maxLoadUnbalance",type:"double",size:1,default:[.1]},{id:"castellatedMeshControls.nCellsBetweenLevels",type:"integer",size:1,default:[3]},{id:"castellatedMeshControls.resolveFeatureAngle",type:"integer",size:1,default:[30]},{id:"castellatedMeshControls.locationInMesh",type:"double",size:3,layout:"3",default:[3.0001,3.0001,.43]},{id:"castellatedMeshControls.allowFreeStandingZoneFaces",type:"string",ui:"enum",size:1,default:["true"],domain:{true:"true",false:"false"}}]},snapControls:{parameters:[{id:"snapControls.nSmoothPatch",type:"double",size:1,default:[3]},{id:"snapControls.tolerance",type:"double",size:1,default:[2]},{id:"snapControls.nSolveIter",type:"integer",size:1,default:[30]},{id:"snapControls.nRelaxIter",type:"integer",size:1,default:[5]},{id:"snapControls.nFeatureSnapIter",type:"integer",size:1,default:[10]},{id:"snapControls.implicitFeatureSnap",type:"string",ui:"enum",size:1,default:["false"],domain:{true:"true",false:"false"}},{id:"snapControls.explicitFeatureSnap",type:"string",ui:"enum",size:1,default:["true"],domain:{true:"true",false:"false"}},{id:"snapControls.multiRegionFeatureSnap",type:"string",ui:"enum",size:1,default:["false"],domain:{true:"true",false:"false"}}]},addLayersControls:{parameters:[{id:"addLayersControls.relativeSizes",type:"string",ui:"enum",size:1,default:["true"],domain:{true:"true",false:"false"}},{id:"addLayersControls.expansionRatio",type:"double",size:1,default:[1]},{id:"addLayersControls.finalLayerThickness",type:"double",size:1,default:[.3]},{id:"addLayersControls.minThickness",type:"double",size:1,default:[.1]},{id:"addLayersControls.nGrow",type:"double",size:1,default:[0]},{id:"addLayersControls.featureAngle",type:"double",size:1,default:[60]},{id:"addLayersControls.slipFeatureAngle",type:"double",size:1,default:[30]},{id:"addLayersControls.nRelaxIter",type:"integer",size:1,default:[3]},{id:"addLayersControls.nSmoothSurfaceNormals",type:"double",size:1,default:[1]},{id:"addLayersControls.nSmoothNormals",type:"double",size:1,default:[3]},{id:"addLayersControls.nSmoothThickness",type:"double",size:1,default:[10]},{id:"addLayersControls.maxFaceThicknessRatio",type:"double",size:1,default:[.5]},{id:"addLayersControls.maxThicknessToMedialRatio",type:"double",size:1,default:[.3]},{id:"addLayersControls.minMedianAxisAngle",type:"double",size:1,default:[90]},{id:"addLayersControls.nBufferCellsNoExtrude",type:"integer",size:1,default:[0]},{id:"addLayersControls.nLayerIter",type:"integer",size:1,default:[50]}]}}}},function(e,n,l){e.exports={en:l(12)}},function(e,n,l){e.exports={help:l(13),"label.json":l(16)}},function(e,n,l){e.exports={example:l(14)}},function(e,n,l){e.exports={"example.path":l(15)}},function(e,n){e.exports="<p>Choose the path to the corresponding example of the OpenFOAM tutorial</p>\n"},function(e){e.exports={views:{InitialConditions:"Boundary conditions",WindTunnel:"Wind tunnel definition",Parameters:"Parameters",Solvers:"Solvers",Decomposition:"Decomposition",Mesh:"Mesh generation",Runtime:"Runtime",castellatedMeshControls:"Castellated Mesh Controls",snapControls:"Snap Controls",addLayersControls:"Add layers Controls"},attributes:{initconst:{title:"Initial conditions",parameters:{"initialConditions.flowVelocity":"Flow veolicty","initialConditions.pressure":"Pressure","initialConditions.turbulentKE":"Turbulent KE","initialConditions.turbulentOmega":"Turbulent Omega"}},initfields:{title:"Fields initialisation",parameters:{"fields.k.dimensions":"Dimensions for k","fields.nut.dimensions":"Dimensions for nut","fields.omega.dimensions":"Dimensions for omega","fields.p.dimensions":"Dimensions for p","fields.U.dimensions":"Dimensions for U","fields.U.inletValue":"Inlet value for U"}},transport:{title:"Transport settings",parameters:{"transport.model":"Model"}},Newtonian:{title:"Newtonian",parameters:{"Newtonian.nu.dimensions":"Nu","Newtonian.nu.epsilon":"Nu Epsilon"}},BirdCarreau:{title:"BirdCarreau",parameters:{"BirdCarreau.nu0.dimensions":"Nu0","BirdCarreau.nu0.epsilon":"Nu0 Epsilon","BirdCarreau.nuInf.dimensions":"Nu Inf","BirdCarreau.nuInf.epsilon":"Nu Inf Epsilon","BirdCarreau.k.dimensions":"k","BirdCarreau.k.epsilon":"k Epsilon","BirdCarreau.n.dimensions":"n","BirdCarreau.n.epsilon":"n Epsilon"}},CrossPowerLaw:{title:"CrossPowerLaw",parameters:{"CrossPowerLaw.nu0.dimensions":"Nu 0","CrossPowerLaw.nu0.epsilon":"Nu 0 Epsilon","CrossPowerLaw.nuInf.dimensions":"Nu Inf","CrossPowerLaw.nuInf.epsilon":"Nu Inf Epsilon","CrossPowerLaw.m.dimensions":"m","CrossPowerLaw.m.epsilon":"m Epsilon","CrossPowerLaw.n.dimensions":"n","CrossPowerLaw.n.epsilon":"n Epsilon"}},powerLaw:{title:"powerLaw",parameters:{"powerLaw.nuMax.dimensions":"Nu Max","powerLaw.nuMax.epsilon":"Nu Max Epsilon","powerLaw.nuMin.dimensions":"Nu Min","powerLaw.nuMin.epsilon":"Nu Min Epsilon","powerLaw.k.dimensions":"k","powerLaw.k.epsilon":"k Epsilon","powerLaw.n.dimensions":"n","powerLaw.n.epsilon":"n Epsilon"}},HerschelBulkley:{title:"HerschelBulkley",parameters:{"HerschelBulkley.nu0.dimensions":"Nu 0","HerschelBulkley.nu0.epsilon":"Nu 0 Epsilon","HerschelBulkley.tau0.dimensions":"Tau 0","HerschelBulkley.tau0.epsilon":"Tau 0 Epsilon","HerschelBulkley.k.dimensions":"k","HerschelBulkley.k.epsilon":"k Epsilon","HerschelBulkley.n.dimensions":"n","HerschelBulkley.n.epsilon":"n Epsilon"}},Casson:{title:"Casson",parameters:{"Casson.m.dimensions":"m","Casson.m.epsilon":"m Epsilon","Casson.tau0.dimensions":"Tau 0","Casson.tau0.epsilon":"Tau 0 Epsilon","Casson.nuMax.dimensions":"nuMax","Casson.nuMax.epsilon":"nuMax Epsilon","Casson.nuMin.dimensions":"nuMin","Casson.nuMin.epsilon":"nuMin Epsilon"}},wallBounds:{title:"Bounds of wind tunnel",parameters:{"tunnel.bounds.x":"X (min, max)","tunnel.bounds.y":"Y (min, max)","tunnel.bounds.z":"Z (min, max)"}},wallAssign:{title:"Walls orientations",parameters:{"tunnel.walls.x.plus":"Wall normal to X (positive side)","tunnel.walls.x.minus":"Wall normal to X (negative side)","tunnel.walls.y.plus":"Wall normal to Y (positive side)","tunnel.walls.y.minus":"Wall normal to Y (negative side)","tunnel.walls.z.plus":"Wall normal to Z (positive side)","tunnel.walls.z.minus":"Wall normal to Z (negative side)"}},controldictTime:{title:"Time control",parameters:{"controldict.time.startFrom":"Start time of the simulation","controldict.time.startTime":"Start time","controldict.time.end":"End time","controldict.time.delta":"Delta time"}},controldictWrite:{title:"Output parameters",parameters:{"controldict.write.control":"Write control","controldict.write.interval":"Write interval","controldict.write.format":"Write format","controldict.write.precision":"Write precision","controldict.write.gzip":"Compress","controldict.write.time.format":"Time format","controldict.write.time.precision":"Time precision","controldict.write.graph.format":"Graph format"}},decomposeParDict:{title:"Decomposition",parameters:{"decomposeParDict.subdomains":"Number of subdomains","decomposeParDict.method":"Method"}},decomposition_simpleCoeffs:{title:"Simple Coeffs",parameters:{"decomposeParDict.simpleCoeffs.n":"N","decomposeParDict.simpleCoeffs.delta":"Delta"}},decomposition_hierarchicalCoeffs:{title:"Hierarchical Coeffs",parameters:{"decomposeParDict.hierarchicalCoeffs.n":"N","decomposeParDict.hierarchicalCoeffs.delta":"Delta","decomposeParDict.hierarchicalCoeffs.order":"Order"}},forceCoeffs:{title:"Force analysis",parameters:{"forceCoeffs.write.control":"Write control","forceCoeffs.write.interval":"Write interval","forceCoeffs.write.log":"Log","forceCoeffs.liftDir":"liftDir","forceCoeffs.dragDir":"dragDir","forceCoeffs.CofR":"CofR","forceCoeffs.pitchAxis":"pitchAxis","forceCoeffs.magUInf":"magUInf","forceCoeffs.lRef":"lRef","forceCoeffs.Aref":"Aref"}},"solver-p":{title:"p",parameters:{"solver.p.solver":"Solver type","solver.p.smoother":"Smoother","solver.p.tolerance":"Tolerance","solver.p.relTol":"Relative Tolerance"}},"solver-U":{title:"U",parameters:{"solver.U.solver":"Solver type","solver.U.smoother":"Smoother","solver.U.tolerance":"Tolerance","solver.U.relTol":"Relative Tolerance","solver.U.nSweeps":"nSweeps"}},"solver-k":{title:"k",parameters:{"solver.k.solver":"Solver type","solver.k.smoother":"Smoother","solver.k.tolerance":"Tolerance","solver.k.relTol":"Relative Tolerance","solver.k.nSweeps":"nSweeps"}},"solver-omega":{title:"omega",parameters:{"solver.omega.solver":"Solver type","solver.omega.smoother":"Smoother","solver.omega.tolerance":"Tolerance","solver.omega.relTol":"Relative Tolerance","solver.omega.nSweeps":"nSweeps"}},correctors:{title:"Correctors",parameters:{"correctors.simple.nNonOrthogonalCorrectors":"Simple nNonOrthogonalCorrectors","correctors.simple..consistent":"Simple consistent","correctors.potentialFlow.nNonOrthogonalCorrectors":"PotentialFlow nNonOrthogonalCorrectors"}},relaxationFactors:{title:"Relaxation Factors",parameters:{"relaxationFactors.equations.U":"U","relaxationFactors.equations.k":"k","relaxationFactors.equations.omega":"omega"}},meshQuality:{title:"Mesh quality",parameters:{"meshQuality.minFaceWeight":"minFaceWeight"}},meshSize:{title:"Mesh Size",parameters:{"meshSize.dimensions":"Dimensions","meshSize.simpleGrading":"Simple Grading"}},meshRefinement:{title:"Mesh Refinement",parameters:{"meshRefinement.refinementBox.type":"Type"}},searchableBox:{title:"Box",parameters:{"meshRefinement.refinementBox.min":"Refinement Box (min[x,y,z])","meshRefinement.refinementBox.max":"Refinement Box (max[x,y,z])"}},searchableSphere:{title:"Sphere",parameters:{"meshRefinement.refinementSphere.center":"Refinement Sphere (center)","meshRefinement.refinementSphere.radius":"Refinement Sphere (radius)"}},runtime:{title:"Runtime step",parameters:{"runtime.step":"Type"}},castellatedMeshControls:{title:"Castellated Mesh Controls",parameters:{"castellatedMeshControls.maxLocalCells":"maxLocalCells","castellatedMeshControls.maxGlobalCells":"maxGlobalCells","castellatedMeshControls.minRefinementCells":"minRefinementCells","castellatedMeshControls.maxLoadUnbalance":"maxLoadUnbalance","castellatedMeshControls.nCellsBetweenLevels":"nCellsBetweenLevels","castellatedMeshControls.resolveFeatureAngle":"resolveFeatureAngle","castellatedMeshControls.locationInMesh":"locationInMesh","castellatedMeshControls.allowFreeStandingZoneFaces":"allowFreeStandingZoneFaces"}},snapControls:{title:"Snap Controls",parameters:{"snapControls.nSmoothPatch":"nSmoothPatch","snapControls.tolerance":"tolerance","snapControls.nSolveIter":"nSolveIter","snapControls.nRelaxIter":"nRelaxIter","snapControls.nFeatureSnapIter":"nFeatureSnapIter","snapControls.implicitFeatureSnap":"implicitFeatureSnap","snapControls.explicitFeatureSnap":"explicitFeatureSnap","snapControls.multiRegionFeatureSnap":"multiRegionFeatureSnap"}},addLayersControls:{title:"Add layers Controls",parameters:{"addLayersControls.relativeSizes":"relativeSizes","addLayersControls.expansionRatio":"expansionRatio","addLayersControls.finalLayerThickness":"finalLayerThickness","addLayersControls.minThickness":"minThickness","addLayersControls.nGrow":"nGrow","addLayersControls.featureAngle":"featureAngle","addLayersControls.slipFeatureAngle":"slipFeatureAngle","addLayersControls.nRelaxIter":"nRelaxIter","addLayersControls.nSmoothSurfaceNormals":"nSmoothSurfaceNormals","addLayersControls.nSmoothNormals":"nSmoothNormals","addLayersControls.nSmoothThickness":"nSmoothThickness","addLayersControls.maxFaceThicknessRatio":"maxFaceThicknessRatio","addLayersControls.maxThicknessToMedialRatio":"maxThicknessToMedialRatio","addLayersControls.minMedianAxisAngle":"minMedianAxisAngle","addLayersControls.nBufferCellsNoExtrude":"nBufferCellsNoExtrude","addLayersControls.nLayerIter":"nLayerIter"}}}}},function(e,n,l){var t=l(18),o=l(19),a=l(20),s={"0.orig/include/fixedInlet":l(21),"0.orig/include/frontBackUpperPatches":l(37),"0.orig/include/initialConditions":l(38),"0.orig/k":l(39),"0.orig/nut":l(40),"0.orig/omega":l(41),"0.orig/p":l(42),"0.orig/U":l(43),"constant/transportProperties":l(44),"constant/turbulenceProperties":l(45),"system/blockMeshDict":l(46),"system/controlDict":l(47),"system/decomposeParDict":l(48),"system/forceCoeffs":l(49),"system/fvSchemes":l(50),"system/fvSolution":l(51),"system/meshQualityDict":l(52),"system/snappyHexMeshDict":l(53),"system/surfaceFeatureExtractDict":l(54),Allclean:l(55),Allrun:l(56),DockerRun:l(57)},r={Allclean:"u+x",Allrun:"u+x",DockerRun:"u+x"};e.exports=function(e){var n={},l=[],i={};return a(i,e,o,t),i.tunnel.simpleGrading=[1,1,1],i.controls.purgeWrite=0,i.controls.writeCompression="uncompressed",i.controls.runTimeModifiable="true",i.forceCoeffs.patches=[i.meshGroupName],i.hexMesh.steps=["castellatedMesh","snap","addLayers"],Object.keys(s).forEach(function(e){try{n[e]=s[e](i)}catch(n){var t="Error trying to convert model for generating ".concat(e);l.push(t),console.log(t,n)}}),l.length||(l=null),{results:n,error:l,model:e,permissions:r}}},function(e,n){e.exports={initialConditions:{flowVelocity:[20,0,0],pressure:0,turbulentKE:.24,turbulentOmega:1.78},meshGroupName:"motorBikeGroup",k:{dimensions:[0,2,-2,0,0,0,0]},nut:{dimensions:[0,2,-1,0,0,0,0]},omega:{dimensions:[0,0,-1,0,0,0,0]},p:{dimensions:[0,2,-2,0,0,0,0]},U:{dimensions:[0,1,-1,0,0,0,0],inletValue:[0,0,0]},transport:{model:"Newtonian",nu:{dimensions:[0,2,-1,0,0,0,0],epsilon:15e-6}},tunnel:{bounds:[-5,15,-4,4,0,8],walls:{x:{plus:"outlet",minus:"inlet"},y:{plus:"rightWall",minus:"leftWall"},z:{plus:"topWall",minus:"bottomWall"}}},controls:{startTime:0,endTime:500,deltaT:1,writeControl:"timeStep",writeInterval:100,purgeWrite:0,writeFormat:"binary",writePrecision:6,writeCompression:"uncompressed",timeFormat:"general",timePrecision:6,runTimeModifiable:"true"},decompose:{numberOfSubdomains:6,method:"hierarchical",simpleCoeffs:{n:[4,1,1],delta:.001},hierarchicalCoeffs:{n:[3,2,1],delta:.001,order:"xyz"}},forceCoeffs:{writeControl:"timeStep",timeInterval:1,log:"yes",patches:["motorBikeGroup"],liftDir:[0,0,1],dragDir:[1,0,0],CofR:[.72,0,0],pitchAxis:[0,1,0],magUInf:20,lRef:1.42,Aref:.75},solvers:{p:{solver:"GAMG",tolerance:1e-7,relTol:.01,smoother:"GaussSeidel"},U:{solver:"smoothSolver",smoother:"GaussSeidel",tolerance:1e-8,relTol:.1,nSweeps:1},k:{solver:"smoothSolver",smoother:"GaussSeidel",tolerance:1e-8,relTol:.1,nSweeps:1},omega:{solver:"smoothSolver",smoother:"GaussSeidel",tolerance:1e-8,relTol:.1,nSweeps:1},correctors:{simple:{nNonOrthogonalCorrectors:0,consistent:"yes"},potentialFlow:{nNonOrthogonalCorrectors:10}}},relaxationFactors:{equations:{U:.9,k:.7,omega:.7}},meshSize:{dimensions:[10,10,10],grading:[1,2,3]},meshQuality:{minFaceWeight:.02},hexMesh:{steps:["castellatedMesh","snap","addLayers"],geometry:{name:"motorBike",refinementBox:{type:"searchableBox",min:[-1,-.7,0],max:[8,.7,2.5]}},castellatedMeshControls:{maxLocalCells:1e5,maxGlobalCells:2e6,minRefinementCells:10,maxLoadUnbalance:.1,nCellsBetweenLevels:3,resolveFeatureAngle:30,locationInMesh:[3.0001,3.0001,.43],allowFreeStandingZoneFaces:"true"},snapControls:{nSmoothPatch:3,tolerance:2,nSolveIter:30,nRelaxIter:5,nFeatureSnapIter:10,implicitFeatureSnap:"false",explicitFeatureSnap:"true",multiRegionFeatureSnap:"false"},addLayersControls:{relativeSizes:"true",expansionRatio:1,finalLayerThickness:.3,minThickness:.1,nGrow:0,featureAngle:60,slipFeatureAngle:30,nRelaxIter:3,nSmoothSurfaceNormals:1,nSmoothNormals:3,nSmoothThickness:10,maxFaceThicknessRatio:.5,maxThicknessToMedialRatio:.3,minMedianAxisAngle:90,nBufferCellsNoExtrude:0,nLayerIter:50}}}},function(e,n){e.exports=[{help:"Initial conditions: Flow velocity",src:"data/InitialConditions/0/initconst/initialConditions.flowVelocity/value",dst:"initialConditions/flowVelocity"},{help:"Initial conditions: Pressure",src:"data/InitialConditions/0/initconst/initialConditions.pressure/value/0",dst:"initialConditions/pressure"},{help:"Initial conditions: Turbulent KE",src:"data/InitialConditions/0/initconst/initialConditions.turbulentKE/value/0",dst:"initialConditions/turbulentKE"},{help:"Initial conditions: Turbulent Omega",src:"data/InitialConditions/0/initconst/initialConditions.turbulentOmega/value/0",dst:"initialConditions/turbulentOmega"},{help:"Mesh group name",src:"external/groupName",dst:"meshGroupName"},{help:"Initial conditions: k",src:"data/InitialConditions/0/initfields/fields.k.dimensions/value",dst:"k/dimensions"},{help:"Initial conditions: nut",src:"data/InitialConditions/0/initfields/fields.nut.dimensions/value",dst:"nut/dimensions"},{help:"Initial conditions: omega",src:"data/InitialConditions/0/initfields/fields.omega.dimensions/value",dst:"omega/dimensions"},{help:"Initial conditions: p",src:"data/InitialConditions/0/initfields/fields.p.dimensions/value",dst:"p/dimensions"},{help:"Initial conditions: U",src:"data/InitialConditions/0/initfields/fields.U.dimensions/value",dst:"U/dimensions"},{help:"Initial conditions: U inlet",src:"data/InitialConditions/0/initfields/fields.U.inletValue/value",dst:"U/inletValue"},{help:"Transport: model",src:"data/InitialConditions/0/transport/transport.model/value/0",dst:"transport/model"},{help:"Transport: Newtonian nu ",src:"data/InitialConditions/0/Newtonian/Newtonian.nu.dimensions/value",dst:"transport/nu/dimensions"},{help:"Transport: Newtonian nu epsilon",src:"data/InitialConditions/0/Newtonian/Newtonian.nu.epsilon/value/0",dst:"transport/nu/epsilon"},{help:"WindTunnel: bounds X (min)",src:"data/WindTunnel/0/wallBounds/tunnel.bounds.x/value/0",dst:"tunnel/bounds/0"},{help:"WindTunnel: bounds X (max)",src:"data/WindTunnel/0/wallBounds/tunnel.bounds.x/value/1",dst:"tunnel/bounds/1"},{help:"WindTunnel: bounds Y (min)",src:"data/WindTunnel/0/wallBounds/tunnel.bounds.y/value/0",dst:"tunnel/bounds/2"},{help:"WindTunnel: bounds Y (max)",src:"data/WindTunnel/0/wallBounds/tunnel.bounds.y/value/1",dst:"tunnel/bounds/3"},{help:"WindTunnel: bounds Z (min)",src:"data/WindTunnel/0/wallBounds/tunnel.bounds.z/value/0",dst:"tunnel/bounds/4"},{help:"WindTunnel: bounds Z (max)",src:"data/WindTunnel/0/wallBounds/tunnel.bounds.z/value/1",dst:"tunnel/bounds/5"},{help:"Wall assignement: X+",src:"data/WindTunnel/0/wallAssign/tunnel.walls.x.plus/value/0",dst:"tunnel/walls/x/plus"},{help:"Wall assignement: X-",src:"data/WindTunnel/0/wallAssign/tunnel.walls.x.minus/value/0",dst:"tunnel/walls/x/minus"},{help:"Wall assignement: Y+",src:"data/WindTunnel/0/wallAssign/tunnel.walls.y.plus/value/0",dst:"tunnel/walls/y/plus"},{help:"Wall assignement: Y-",src:"data/WindTunnel/0/wallAssign/tunnel.walls.y.minus/value/0",dst:"tunnel/walls/y/minus"},{help:"Wall assignement: Z+",src:"data/WindTunnel/0/wallAssign/tunnel.walls.z.plus/value/0",dst:"tunnel/walls/z/plus"},{help:"Wall assignement: Z-",src:"data/WindTunnel/0/wallAssign/tunnel.walls.z.minus/value/0",dst:"tunnel/walls/z/minus"},{help:"Controls: Start time",src:"data/Parameters/0/controldictTime/controldict.time.startTime/value/0",dst:"controls/startTime"},{help:"Controls: End time",src:"data/Parameters/0/controldictTime/controldict.time.end/value/0",dst:"controls/endTime"},{help:"Controls: Delta",src:"data/Parameters/0/controldictTime/controldict.time.delta/value/0",dst:"controls/deltaT"},{help:"Controls: Write type",src:"data/Parameters/0/controldictWrite/controldict.write.control/value/0",dst:"controls/writeControl"},{help:"Controls: Write interval",src:"data/Parameters/0/controldictWrite/controldict.write.interval/value/0",dst:"controls/writeInterval"},{help:"Controls: Write format",src:"data/Parameters/0/controldictWrite/controldict.write.format/value/0",dst:"controls/writeFormat"},{help:"Controls: Write precision",src:"data/Parameters/0/controldictWrite/controldict.write.precision/value/0",dst:"controls/writePrecision"},{help:"Controls: Time format",src:"data/Parameters/0/controldictWrite/controldict.write.time.format/value/0",dst:"controls/timeFormat"},{help:"Controls: Time precision",src:"data/Parameters/0/controldictWrite/controldict.write.time.precision/value/0",dst:"controls/timePrecision"},{help:"Decomposition: subdomains",src:"data/Decomposition/0/decomposeParDict/decomposeParDict.subdomains/value/0",dst:"decompose/numberOfSubdomains"},{help:"Decomposition: method",src:"data/Decomposition/0/decomposeParDict/decomposeParDict.method/value/0",dst:"decompose/method"},{help:"Decomposition: simpleCoeffs n",src:"data/Decomposition/0/decomposition_simpleCoeffs/decomposeParDict.simpleCoeffs.n/value",dst:"decompose/simpleCoeffs/n"},{help:"Decomposition: simpleCoeffs delta",src:"data/Decomposition/0/decomposition_simpleCoeffs/decomposeParDict.simpleCoeffs.delta/value/0",dst:"decompose/simpleCoeffs/delta"},{help:"Decomposition: hierarchicalCoeffs n",src:"data/Decomposition/0/decomposition_hierarchicalCoeffs/decomposeParDict.hierarchicalCoeffs.n/value",dst:"decompose/hierarchicalCoeffs/n"},{help:"Decomposition: hierarchicalCoeffs delta",src:"data/Decomposition/0/decomposition_hierarchicalCoeffs/decomposeParDict.hierarchicalCoeffs.delta/value/0",dst:"decompose/hierarchicalCoeffs/delta"},{help:"Decomposition: hierarchicalCoeffs order",src:"data/Decomposition/0/decomposition_hierarchicalCoeffs/decomposeParDict.hierarchicalCoeffs.order/value/0",dst:"decompose/hierarchicalCoeffs/order"},{help:"Force coef: write control",src:"data/Decomposition/0/forceCoeffs/forceCoeffs.write.control/value/0",dst:"forceCoeffs/writeControl"},{help:"Force coef: time interval",src:"data/Decomposition/0/forceCoeffs/forceCoeffs.write.interval/value/0",dst:"forceCoeffs/timeInterval"},{help:"Force coef: log",src:"data/Decomposition/0/forceCoeffs/forceCoeffs.write.log/value/0",dst:"forceCoeffs/log"},{help:"Force coef: liftDir",src:"data/Decomposition/0/forceCoeffs/forceCoeffs.liftDir/value",dst:"forceCoeffs/liftDir"},{help:"Force coef: dragDir",src:"data/Decomposition/0/forceCoeffs/forceCoeffs.dragDir/value",dst:"forceCoeffs/dragDir"},{help:"Force coef: CofR",src:"data/Decomposition/0/forceCoeffs/forceCoeffs.CofR/value",dst:"forceCoeffs/CofR"},{help:"Force coef: pitchAxis",src:"data/Decomposition/0/forceCoeffs/forceCoeffs.pitchAxis/value",dst:"forceCoeffs/pitchAxis"},{help:"Force coef: magUInf",src:"data/Decomposition/0/forceCoeffs/forceCoeffs.magUInf/value/0",dst:"forceCoeffs/magUInf"},{help:"Force coef: lRef",src:"data/Decomposition/0/forceCoeffs/forceCoeffs.lRef/value/0",dst:"forceCoeffs/lRef"},{help:"Force coef: Aref",src:"data/Decomposition/0/forceCoeffs/forceCoeffs.Aref/value/0",dst:"forceCoeffs/Aref"},{help:"Solver: p solver",src:"data/Solvers/0/solver-p/solver.p.solver/value/0",dst:"solvers/p/solver"},{help:"Solver: p smoother",src:"data/Solvers/0/solver-p/solver.p.smoother/value/0",dst:"solvers/p/smoother"},{help:"Solver: p tolerance",src:"data/Solvers/0/solver-p/solver.p.tolerance/value/0",dst:"solvers/p/tolerance"},{help:"Solver: p relTol",src:"data/Solvers/0/solver-p/solver.p.relTol/value/0",dst:"solvers/p/relTol"},{help:"Solver: U solver",src:"data/Solvers/0/solver-U/solver.U.solver/value/0",dst:"solvers/U/solver"},{help:"Solver: U smoother",src:"data/Solvers/0/solver-U/solver.U.smoother/value/0",dst:"solvers/U/smoother"},{help:"Solver: U tolerance",src:"data/Solvers/0/solver-U/solver.U.tolerance/value/0",dst:"solvers/U/tolerance"},{help:"Solver: U relTol",src:"data/Solvers/0/solver-U/solver.U.relTol/value/0",dst:"solvers/U/relTol"},{help:"Solver: U nSweeps",src:"data/Solvers/0/solver-U/solver.U.nSweeps/value/0",dst:"solvers/U/nSweeps"},{help:"Solver: k solver",src:"data/Solvers/0/solver-k/solver.k.solver/value/0",dst:"solvers/k/solver"},{help:"Solver: k smoother",src:"data/Solvers/0/solver-k/solver.k.smoother/value/0",dst:"solvers/k/smoother"},{help:"Solver: k tolerance",src:"data/Solvers/0/solver-k/solver.k.tolerance/value/0",dst:"solvers/k/tolerance"},{help:"Solver: k relTol",src:"data/Solvers/0/solver-k/solver.k.relTol/value/0",dst:"solvers/k/relTol"},{help:"Solver: k nSweeps",src:"data/Solvers/0/solver-k/solver.k.nSweeps/value/0",dst:"solvers/k/nSweeps"},{help:"Solver: omega solver",src:"data/Solvers/0/solver-omega/solver.omega.solver/value/0",dst:"solvers/omega/solver"},{help:"Solver: omega smoother",src:"data/Solvers/0/solver-omega/solver.omega.smoother/value/0",dst:"solvers/omega/smoother"},{help:"Solver: omega tolerance",src:"data/Solvers/0/solver-omega/solver.omega.tolerance/value/0",dst:"solvers/omega/tolerance"},{help:"Solver: omega relTol",src:"data/Solvers/0/solver-omega/solver.omega.relTol/value/0",dst:"solvers/omega/relTol"},{help:"Solver: omega nSweeps",src:"data/Solvers/0/solver-omega/solver.omega.nSweeps/value/0",dst:"solvers/omega/nSweeps"},{help:"Correctors: simple non orthogonal",src:"data/Solvers/0/correctors/correctors.simple.nNonOrthogonalCorrectors/value/0",dst:"solvers/correctors/simple/nNonOrthogonalCorrectors"},{help:"Correctors: simple consistent",src:"data/Solvers/0/correctors/correctors.simple.consistent/value/0",dst:"solvers/correctors/simple/consistent"},{help:"Correctors: potentialFlow",src:"data/Solvers/0/correctors/correctors.potentialFlow.nNonOrthogonalCorrectors/value/0",dst:"solvers/correctors/potentialFlow/nNonOrthogonalCorrectors"},{help:"RelaxationFactors: U",src:"data/Solvers/0/relaxationFactors/relaxationFactors.equations.U/value/0",dst:"relaxationFactors/equations/U"},{help:"RelaxationFactors: k",src:"data/Solvers/0/relaxationFactors/relaxationFactors.equations.k/value/0",dst:"relaxationFactors/equations/k"},{help:"RelaxationFactors: omega",src:"data/Solvers/0/relaxationFactors/relaxationFactors.equations.omega/value/0",dst:"relaxationFactors/equations/omega"},{help:"Mesh size: dimensions",src:"data/Mesh/0/meshSize/meshSize.dimensions/value",dst:"meshSize/dimensions"},{help:"Mesh size: simpleGrading",src:"data/Mesh/0/meshSize/meshSize.simpleGrading/value",dst:"meshSize/grading"},{help:"Mesh quality: minFaceWeight",src:"data/Mesh/0/meshQuality/meshQuality.minFaceWeight/value/0",dst:"meshQuality/minFaceWeight"},{help:"Hex Mesh: geometry name",src:"external/geometryName",dst:"hexMesh/geometry/name"},{help:"Hex Mesh: refinementBox",src:"data/Mesh/0/meshRefinement/meshRefinement.refinementBox.type/value/0",dst:"hexMesh/geometry/refinementBox/type"},{help:"Hex Mesh: refinementBox min",src:"data/Mesh/0/searchableBox/meshRefinement.refinementBox.min/value",dst:"hexMesh/geometry/refinementBox/min"},{help:"Hex Mesh: refinementBox max",src:"data/Mesh/0/searchableBox/meshRefinement.refinementBox.max/value",dst:"hexMesh/geometry/refinementBox/max"},{help:"Castellated Mesh Controls: maxLocalCells",src:"data/castellatedMeshControls/0/castellatedMeshControls/castellatedMeshControls.maxLocalCells/value/0",dst:"hexMesh/castellatedMeshControls/maxLocalCells"},{help:"Castellated Mesh Controls: maxGlobalCells",src:"data/castellatedMeshControls/0/castellatedMeshControls/castellatedMeshControls.maxGlobalCells/value/0",dst:"hexMesh/castellatedMeshControls/maxGlobalCells"},{help:"Castellated Mesh Controls: minRefinementCells",src:"data/castellatedMeshControls/0/castellatedMeshControls/castellatedMeshControls.minRefinementCells/value/0",dst:"hexMesh/castellatedMeshControls/minRefinementCells"},{help:"Castellated Mesh Controls: maxLoadUnbalance",src:"data/castellatedMeshControls/0/castellatedMeshControls/castellatedMeshControls.maxLoadUnbalance/value/0",dst:"hexMesh/castellatedMeshControls/maxLoadUnbalance"},{help:"Castellated Mesh Controls: nCellsBetweenLevels",src:"data/castellatedMeshControls/0/castellatedMeshControls/castellatedMeshControls.nCellsBetweenLevels/value/0",dst:"hexMesh/castellatedMeshControls/nCellsBetweenLevels"},{help:"Castellated Mesh Controls: resolveFeatureAngle",src:"data/castellatedMeshControls/0/castellatedMeshControls/castellatedMeshControls.resolveFeatureAngle/value/0",dst:"hexMesh/castellatedMeshControls/resolveFeatureAngle"},{help:"Castellated Mesh Controls: locationInMesh",src:"data/castellatedMeshControls/0/castellatedMeshControls/castellatedMeshControls.locationInMesh/value",dst:"hexMesh/castellatedMeshControls/locationInMesh"},{help:"Castellated Mesh Controls: allowFreeStandingZoneFaces",src:"data/castellatedMeshControls/0/castellatedMeshControls/castellatedMeshControls.allowFreeStandingZoneFaces/value/0",dst:"hexMesh/castellatedMeshControls/allowFreeStandingZoneFaces"},{help:"Snap Controls: nSmoothPatch",src:"data/snapControls/1/snapControls/snapControls.nSmoothPatch/value/0",dst:"hexMesh/snapControls/nSmoothPatch"},{help:"Snap Controls: tolerance",src:"data/snapControls/1/snapControls/snapControls.tolerance/value/0",dst:"hexMesh/snapControls/tolerance"},{help:"Snap Controls: nSolveIter",src:"data/snapControls/1/snapControls/snapControls.nSolveIter/value/0",dst:"hexMesh/snapControls/nSolveIter"},{help:"Snap Controls: nRelaxIter",src:"data/snapControls/1/snapControls/snapControls.nRelaxIter/value/0",dst:"hexMesh/snapControls/nRelaxIter"},{help:"Snap Controls: nFeatureSnapIter",src:"data/snapControls/1/snapControls/snapControls.nFeatureSnapIter/value/0",dst:"hexMesh/snapControls/nFeatureSnapIter"},{help:"Snap Controls: implicitFeatureSnap",src:"data/snapControls/1/snapControls/snapControls.implicitFeatureSnap/value/0",dst:"hexMesh/snapControls/implicitFeatureSnap"},{help:"Snap Controls: explicitFeatureSnap",src:"data/snapControls/1/snapControls/snapControls.explicitFeatureSnap/value/0",dst:"hexMesh/snapControls/explicitFeatureSnap"},{help:"Snap Controls: multiRegionFeatureSnap",src:"data/snapControls/1/snapControls/snapControls.multiRegionFeatureSnap/value/0",dst:"hexMesh/snapControls/multiRegionFeatureSnap"},{help:"Add Layers Controls: relativeSizes",src:"data/addLayersControls/2/addLayersControls/addLayersControls.relativeSizes/value/0",dst:"hexMesh/addLayersControls/relativeSizes"},{help:"Add Layers Controls: expansionRatio",src:"data/addLayersControls/2/addLayersControls/addLayersControls.expansionRatio/value/0",dst:"hexMesh/addLayersControls/expansionRatio"},{help:"Add Layers Controls: finalLayerThickness",src:"data/addLayersControls/2/addLayersControls/addLayersControls.finalLayerThickness/value/0",dst:"hexMesh/addLayersControls/finalLayerThickness"},{help:"Add Layers Controls: minThickness",src:"data/addLayersControls/2/addLayersControls/addLayersControls.minThickness/value/0",dst:"hexMesh/addLayersControls/minThickness"},{help:"Add Layers Controls: nGrow",src:"data/addLayersControls/2/addLayersControls/addLayersControls.nGrow/value/0",dst:"hexMesh/addLayersControls/nGrow"},{help:"Add Layers Controls: featureAngle",src:"data/addLayersControls/2/addLayersControls/addLayersControls.featureAngle/value/0",dst:"hexMesh/addLayersControls/featureAngle"},{help:"Add Layers Controls: slipFeatureAngle",src:"data/addLayersControls/2/addLayersControls/addLayersControls.slipFeatureAngle/value/0",dst:"hexMesh/addLayersControls/slipFeatureAngle"},{help:"Add Layers Controls: nRelaxIter",src:"data/addLayersControls/2/addLayersControls/addLayersControls.nRelaxIter/value/0",dst:"hexMesh/addLayersControls/nRelaxIter"},{help:"Add Layers Controls: nSmoothSurfaceNormals",src:"data/addLayersControls/2/addLayersControls/addLayersControls.nSmoothSurfaceNormals/value/0",dst:"hexMesh/addLayersControls/nSmoothSurfaceNormals"},{help:"Add Layers Controls: nSmoothNormals",src:"data/addLayersControls/2/addLayersControls/addLayersControls.nSmoothNormals/value/0",dst:"hexMesh/addLayersControls/nSmoothNormals"},{help:"Add Layers Controls: nSmoothThickness",src:"data/addLayersControls/2/addLayersControls/addLayersControls.nSmoothThickness/value/0",dst:"hexMesh/addLayersControls/nSmoothThickness"},{help:"Add Layers Controls: maxFaceThicknessRatio",src:"data/addLayersControls/2/addLayersControls/addLayersControls.maxFaceThicknessRatio/value/0",dst:"hexMesh/addLayersControls/maxFaceThicknessRatio"},{help:"Add Layers Controls: maxThicknessToMedialRatio",src:"data/addLayersControls/2/addLayersControls/addLayersControls.maxThicknessToMedialRatio/value/0",dst:"hexMesh/addLayersControls/maxThicknessToMedialRatio"},{help:"Add Layers Controls: minMedianAxisAngle",src:"data/addLayersControls/2/addLayersControls/addLayersControls.minMedianAxisAngle/value/0",dst:"hexMesh/addLayersControls/minMedianAxisAngle"},{help:"Add Layers Controls: nBufferCellsNoExtrude",src:"data/addLayersControls/2/addLayersControls/addLayersControls.nBufferCellsNoExtrude/value/0",dst:"hexMesh/addLayersControls/nBufferCellsNoExtrude"},{help:"Add Layers Controls: nLayerIter",src:"data/addLayersControls/2/addLayersControls/addLayersControls.nLayerIter/value/0",dst:"hexMesh/addLayersControls/nLayerIter"}]},function(e,n){function l(e){var n=Number(e);return Number.isInteger(n)?n:e}function t(e,n){for(var t=n.split("/"),o=e,a=l(t.shift());void 0!==o[a];){if(o=o[a],!t.length)return o;a=l(t.shift())}}e.exports=function(e,n,o,a){o.forEach(function(o){var s=function(e,n,l){return console.log(void 0===n?"-":"+",e),void 0!==n?n:l}(o.help,t(n,o.src),t(a,o.dst));!function(e,n,t){var o=n.split("/"),a=l(o.pop()),s=e;o.map(l).forEach(function(e,n,l){void 0===s[e]&&(s[e]=Number.isInteger(n+1<l.length?l[n+1]:a)?[]:{}),s=s[e]}),s[a]=t}(e,o.dst,s)})}},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\n\ninlet\n{\n    type  fixedValue;\n    value $internalField;\n}\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){"use strict";function t(e){return e&&e.__esModule?e:{default:e}}function o(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var l in e)Object.prototype.hasOwnProperty.call(e,l)&&(n[l]=e[l]);return n.default=e,n}n.__esModule=!0;var a=o(l(7)),s=t(l(34)),r=t(l(5)),i=o(l(3)),u=o(l(35)),d=t(l(36));function c(){var e=new a.HandlebarsEnvironment;return i.extend(e,a),e.SafeString=s.default,e.Exception=r.default,e.Utils=i,e.escapeExpression=i.escapeExpression,e.VM=u,e.template=function(n){return u.template(n,e)},e}var p=c();p.create=c,d.default(p),p.default=p,n.default=p,e.exports=n.default},function(e,n,l){"use strict";function t(e){return e&&e.__esModule?e:{default:e}}n.__esModule=!0,n.registerDefaultHelpers=function(e){o.default(e),a.default(e),s.default(e),r.default(e),i.default(e),u.default(e),d.default(e)};var o=t(l(24)),a=t(l(25)),s=t(l(26)),r=t(l(27)),i=t(l(28)),u=t(l(29)),d=t(l(30))},function(e,n,l){"use strict";n.__esModule=!0;var t=l(3);n.default=function(e){e.registerHelper("blockHelperMissing",function(n,l){var o=l.inverse,a=l.fn;if(!0===n)return a(this);if(!1===n||null==n)return o(this);if(t.isArray(n))return n.length>0?(l.ids&&(l.ids=[l.name]),e.helpers.each(n,l)):o(this);if(l.data&&l.ids){var s=t.createFrame(l.data);s.contextPath=t.appendContextPath(l.data.contextPath,l.name),l={data:s}}return a(n,l)})},e.exports=n.default},function(e,n,l){"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}n.__esModule=!0;var o=l(3),a=function(e){return e&&e.__esModule?e:{default:e}}(l(5));n.default=function(e){e.registerHelper("each",function(e,n){if(!n)throw new a.default("Must pass iterator to #each");var l=n.fn,s=n.inverse,r=0,i="",u=void 0,d=void 0;function c(n,t,a){u&&(u.key=n,u.index=t,u.first=0===t,u.last=!!a,d&&(u.contextPath=d+n)),i+=l(e[n],{data:u,blockParams:o.blockParams([e[n],n],[d+n,null])})}if(n.data&&n.ids&&(d=o.appendContextPath(n.data.contextPath,n.ids[0])+"."),o.isFunction(e)&&(e=e.call(this)),n.data&&(u=o.createFrame(n.data)),e&&"object"===t(e))if(o.isArray(e))for(var p=e.length;r<p;r++)r in e&&c(r,r,r===e.length-1);else{var m=void 0;for(var f in e)e.hasOwnProperty(f)&&(void 0!==m&&c(m,r-1),m=f,r++);void 0!==m&&c(m,r-1,!0)}return 0===r&&(i=s(this)),i})},e.exports=n.default},function(e,n,l){"use strict";n.__esModule=!0;var t=function(e){return e&&e.__esModule?e:{default:e}}(l(5));n.default=function(e){e.registerHelper("helperMissing",function(){if(1!==arguments.length)throw new t.default('Missing helper: "'+arguments[arguments.length-1].name+'"')})},e.exports=n.default},function(e,n,l){"use strict";n.__esModule=!0;var t=l(3);n.default=function(e){e.registerHelper("if",function(e,n){return t.isFunction(e)&&(e=e.call(this)),!n.hash.includeZero&&!e||t.isEmpty(e)?n.inverse(this):n.fn(this)}),e.registerHelper("unless",function(n,l){return e.helpers.if.call(this,n,{fn:l.inverse,inverse:l.fn,hash:l.hash})})},e.exports=n.default},function(e,n,l){"use strict";n.__esModule=!0,n.default=function(e){e.registerHelper("log",function(){for(var n=[void 0],l=arguments[arguments.length-1],t=0;t<arguments.length-1;t++)n.push(arguments[t]);var o=1;null!=l.hash.level?o=l.hash.level:l.data&&null!=l.data.level&&(o=l.data.level),n[0]=o,e.log.apply(e,n)})},e.exports=n.default},function(e,n,l){"use strict";n.__esModule=!0,n.default=function(e){e.registerHelper("lookup",function(e,n){return e&&e[n]})},e.exports=n.default},function(e,n,l){"use strict";n.__esModule=!0;var t=l(3);n.default=function(e){e.registerHelper("with",function(e,n){t.isFunction(e)&&(e=e.call(this));var l=n.fn;if(t.isEmpty(e))return n.inverse(this);var o=n.data;return n.data&&n.ids&&((o=t.createFrame(n.data)).contextPath=t.appendContextPath(n.data.contextPath,n.ids[0])),l(e,{data:o,blockParams:t.blockParams([e],[o&&o.contextPath])})})},e.exports=n.default},function(e,n,l){"use strict";n.__esModule=!0,n.registerDefaultDecorators=function(e){t.default(e)};var t=function(e){return e&&e.__esModule?e:{default:e}}(l(32))},function(e,n,l){"use strict";n.__esModule=!0;var t=l(3);n.default=function(e){e.registerDecorator("inline",function(e,n,l,o){var a=e;return n.partials||(n.partials={},a=function(o,a){var s=l.partials;l.partials=t.extend({},s,n.partials);var r=e(o,a);return l.partials=s,r}),n.partials[o.args[0]]=o.fn,a})},e.exports=n.default},function(e,n,l){"use strict";n.__esModule=!0;var t=l(3),o={methodMap:["debug","info","warn","error"],level:"info",lookupLevel:function(e){if("string"==typeof e){var n=t.indexOf(o.methodMap,e.toLowerCase());e=n>=0?n:parseInt(e,10)}return e},log:function(e){if(e=o.lookupLevel(e),"undefined"!=typeof console&&o.lookupLevel(o.level)<=e){var n=o.methodMap[e];console[n]||(n="log");for(var l=arguments.length,t=Array(l>1?l-1:0),a=1;a<l;a++)t[a-1]=arguments[a];console[n].apply(console,t)}}};n.default=o,e.exports=n.default},function(e,n,l){"use strict";function t(e){this.string=e}n.__esModule=!0,t.prototype.toString=t.prototype.toHTML=function(){return""+this.string},n.default=t,e.exports=n.default},function(e,n,l){"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}n.__esModule=!0,n.checkRevision=function(e){var n=e&&e[0]||1,l=s.COMPILER_REVISION;if(n!==l){if(n<l){var t=s.REVISION_CHANGES[l],o=s.REVISION_CHANGES[n];throw new a.default("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+t+") or downgrade your runtime to an older version ("+o+").")}throw new a.default("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+e[1]+").")}},n.template=function(e,n){if(!n)throw new a.default("No environment passed to template");if(!e||!e.main)throw new a.default("Unknown template object: "+t(e));e.main.decorator=e.main_d,n.VM.checkRevision(e.compiler);var l={strict:function(e,n){if(!(n in e))throw new a.default('"'+n+'" not defined in '+e);return e[n]},lookup:function(e,n){for(var l=e.length,t=0;t<l;t++)if(e[t]&&null!=e[t][n])return e[t][n]},lambda:function(e,n){return"function"==typeof e?e.call(n):e},escapeExpression:o.escapeExpression,invokePartial:function(l,t,s){s.hash&&(t=o.extend({},t,s.hash),s.ids&&(s.ids[0]=!0));l=n.VM.resolvePartial.call(this,l,t,s);var r=n.VM.invokePartial.call(this,l,t,s);null==r&&n.compile&&(s.partials[s.name]=n.compile(l,e.compilerOptions,n),r=s.partials[s.name](t,s));if(null!=r){if(s.indent){for(var i=r.split("\n"),u=0,d=i.length;u<d&&(i[u]||u+1!==d);u++)i[u]=s.indent+i[u];r=i.join("\n")}return r}throw new a.default("The partial "+s.name+" could not be compiled when running in runtime-only mode")},fn:function(n){var l=e[n];return l.decorator=e[n+"_d"],l},programs:[],program:function(e,n,l,t,o){var a=this.programs[e],s=this.fn(e);return n||o||t||l?a=r(this,e,s,n,l,t,o):a||(a=this.programs[e]=r(this,e,s)),a},data:function(e,n){for(;e&&n--;)e=e._parent;return e},merge:function(e,n){var l=e||n;return e&&n&&e!==n&&(l=o.extend({},n,e)),l},nullContext:Object.seal({}),noop:n.VM.noop,compilerInfo:e.compiler};function i(n){var t=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],o=t.data;i._setup(t),!t.partial&&e.useData&&(o=function(e,n){n&&"root"in n||((n=n?s.createFrame(n):{}).root=e);return n}(n,o));var a=void 0,r=e.useBlockParams?[]:void 0;function d(n){return""+e.main(l,n,l.helpers,l.partials,o,r,a)}return e.useDepths&&(a=t.depths?n!=t.depths[0]?[n].concat(t.depths):t.depths:[n]),(d=u(e.main,d,l,t.depths||[],o,r))(n,t)}return i.isTop=!0,i._setup=function(t){t.partial?(l.helpers=t.helpers,l.partials=t.partials,l.decorators=t.decorators):(l.helpers=l.merge(t.helpers,n.helpers),e.usePartial&&(l.partials=l.merge(t.partials,n.partials)),(e.usePartial||e.useDecorators)&&(l.decorators=l.merge(t.decorators,n.decorators)))},i._child=function(n,t,o,s){if(e.useBlockParams&&!o)throw new a.default("must pass block params");if(e.useDepths&&!s)throw new a.default("must pass parent depths");return r(l,n,e[n],t,0,o,s)},i},n.wrapProgram=r,n.resolvePartial=function(e,n,l){e?e.call||l.name||(l.name=e,e=l.partials[e]):e="@partial-block"===l.name?l.data["partial-block"]:l.partials[l.name];return e},n.invokePartial=function(e,n,l){var t=l.data&&l.data["partial-block"];l.partial=!0,l.ids&&(l.data.contextPath=l.ids[0]||l.data.contextPath);var r=void 0;l.fn&&l.fn!==i&&function(){l.data=s.createFrame(l.data);var e=l.fn;r=l.data["partial-block"]=function(n){var l=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return l.data=s.createFrame(l.data),l.data["partial-block"]=t,e(n,l)},e.partials&&(l.partials=o.extend({},l.partials,e.partials))}();void 0===e&&r&&(e=r);if(void 0===e)throw new a.default("The partial "+l.name+" could not be found");if(e instanceof Function)return e(n,l)},n.noop=i;var o=function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var l in e)Object.prototype.hasOwnProperty.call(e,l)&&(n[l]=e[l]);return n.default=e,n}(l(3)),a=function(e){return e&&e.__esModule?e:{default:e}}(l(5)),s=l(7);function r(e,n,l,t,o,a,s){function r(n){var o=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],r=s;return!s||n==s[0]||n===e.nullContext&&null===s[0]||(r=[n].concat(s)),l(e,n,e.helpers,e.partials,o.data||t,a&&[o.blockParams].concat(a),r)}return(r=u(l,r,e,s,t,a)).program=n,r.depth=s?s.length:0,r.blockParams=o||0,r}function i(){return""}function u(e,n,l,t,a,s){if(e.decorator){var r={};n=e.decorator(n,r,l,t&&t[0],a,s,t),o.extend(n,r)}return n}},function(e,n,l){"use strict";(function(l){n.__esModule=!0,n.default=function(e){var n=void 0!==l?l:window,t=n.Handlebars;e.noConflict=function(){return n.Handlebars===e&&(n.Handlebars=t),e}},e.exports=n.default}).call(this,l(6))},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\n\ntopWall\n{\n    type slip;\n}\n\nleftWall\n{\n    type slip;\n}\n\nrightWall\n{\n    type slip;\n}\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,t,o,a){var s,r=e.lambda;return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\n\nflowVelocity         ("+(null!=(s=function(e){return e&&(e.__esModule?e.default:e)}(l(2)).call(null!=n?n:e.nullContext||{},null!=(s=null!=n?n.initialConditions:n)?s.flowVelocity:s,{name:"../../vector",hash:{},data:a}))?s:"")+");\npressure             "+(null!=(s=r(null!=(s=null!=n?n.initialConditions:n)?s.pressure:s,n))?s:"")+";\nturbulentKE          "+(null!=(s=r(null!=(s=null!=n?n.initialConditions:n)?s.turbulentKE:s,n))?s:"")+";\nturbulentOmega       "+(null!=(s=r(null!=(s=null!=n?n.initialConditions:n)?s.turbulentOmega:s,n))?s:"")+";\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,t,o,a){var s;return'/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       volScalarField;\n    object      k;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\n#include        "include/initialConditions"\n\ndimensions      ['+(null!=(s=function(e){return e&&(e.__esModule?e.default:e)}(l(2)).call(null!=n?n:e.nullContext||{},null!=(s=null!=n?n.k:n)?s.dimensions:s,{name:"../vector",hash:{},data:a}))?s:"")+'];\n\ninternalField   uniform $turbulentKE;\n\nboundaryField\n{\n    //- Set patchGroups for constraint patches\n    #includeEtc "caseDicts/setConstraintTypes"\n\n    //- Define inlet conditions\n    #include "include/fixedInlet"\n\n    outlet\n    {\n        type            inletOutlet;\n        inletValue      $internalField;\n        value           $internalField;\n    }\n\n    //- This should probably be on a condition\n    bottomWall\n    {\n        type            kqRWallFunction;\n        value           $internalField;\n    }\n\n    '+(null!=(s=e.lambda(null!=n?n.meshGroupName:n,n))?s:"")+'\n    {\n        type            kqRWallFunction;\n        value           $internalField;\n    }\n\n    #include "include/frontBackUpperPatches"\n}\n\n\n// ************************************************************************* //\n'},useData:!0})},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,t,o,a){var s;return'/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       volScalarField;\n    location    "0";\n    object      nut;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\ndimensions      ['+(null!=(s=function(e){return e&&(e.__esModule?e.default:e)}(l(2)).call(null!=n?n:e.nullContext||{},null!=(s=null!=n?n.nut:n)?s.dimensions:s,{name:"../vector",hash:{},data:a}))?s:"")+'];\n\ninternalField   uniform 0;\n\nboundaryField\n{\n    //- Set patchGroups for constraint patches\n    #includeEtc "caseDicts/setConstraintTypes"\n\n    leftWall\n    {\n        type            calculated;\n        value           uniform 0;\n    }\n\n    rightWall\n    {\n        type            calculated;\n        value           uniform 0;\n    }\n\n    inlet\n    {\n        type            calculated;\n        value           uniform 0;\n    }\n\n    outlet\n    {\n        type            calculated;\n        value           uniform 0;\n    }\n\n    bottomWall\n    {\n        type            nutkWallFunction;\n        value           uniform 0;\n    }\n\n    topWall\n    {\n        type            calculated;\n        value           uniform 0;\n    }\n\n    '+(null!=(s=e.lambda(null!=n?n.meshGroupName:n,n))?s:"")+"\n    {\n        type            nutkWallFunction;\n        value           uniform 0;\n    }\n}\n\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,t,o,a){var s;return'/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       volScalarField;\n    object      omega;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\n#include        "include/initialConditions"\n\ndimensions      ['+(null!=(s=function(e){return e&&(e.__esModule?e.default:e)}(l(2)).call(null!=n?n:e.nullContext||{},null!=(s=null!=n?n.omega:n)?s.dimensions:s,{name:"../vector",hash:{},data:a}))?s:"")+'];\n\ninternalField   uniform $turbulentOmega;\n\nboundaryField\n{\n    //- Set patchGroups for constraint patches\n    #includeEtc "caseDicts/setConstraintTypes"\n\n    #include "include/fixedInlet"\n\n    outlet\n    {\n        type            inletOutlet;\n        inletValue      $internalField;\n        value           $internalField;\n    }\n\n    bottomWall\n    {\n        type            omegaWallFunction;\n        value           $internalField;\n    }\n\n    '+(null!=(s=e.lambda(null!=n?n.meshGroupName:n,n))?s:"")+'\n    {\n        type            omegaWallFunction;\n        value           $internalField;\n    }\n\n    #include "include/frontBackUpperPatches"\n}\n\n\n// ************************************************************************* //\n'},useData:!0})},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,t,o,a){var s;return'/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       volScalarField;\n    object      p;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\n#include        "include/initialConditions"\n\ndimensions      ['+(null!=(s=function(e){return e&&(e.__esModule?e.default:e)}(l(2)).call(null!=n?n:e.nullContext||{},null!=(s=null!=n?n.p:n)?s.dimensions:s,{name:"../vector",hash:{},data:a}))?s:"")+'];\n\ninternalField   uniform $pressure;\n\nboundaryField\n{\n    //- Set patchGroups for constraint patches\n    #includeEtc "caseDicts/setConstraintTypes"\n\n    inlet\n    {\n        type            zeroGradient;\n    }\n\n    outlet\n    {\n        type            fixedValue;\n        value           $internalField;\n    }\n\n    bottomWall\n    {\n        type            zeroGradient;\n    }\n\n    '+(null!=(s=e.lambda(null!=n?n.meshGroupName:n,n))?s:"")+'\n    {\n        type            zeroGradient;\n    }\n\n    #include "include/frontBackUpperPatches"\n}\n\n// ************************************************************************* //\n'},useData:!0})},function(e,n,l){var t=l(1);function o(e){return e&&(e.__esModule?e.default:e)}e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,t,a,s){var r,i=null!=n?n:e.nullContext||{};return'/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       volVectorField;\n    location    "0";\n    object      U;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\n#include        "include/initialConditions"\n\ndimensions      ['+(null!=(r=o(l(2)).call(i,null!=(r=null!=n?n.U:n)?r.dimensions:r,{name:"../vector",hash:{},data:s}))?r:"")+'];\n\ninternalField   uniform $flowVelocity;\n\nboundaryField\n{\n    //- Set patchGroups for constraint patches\n    #includeEtc "caseDicts/setConstraintTypes"\n\n    #include "include/fixedInlet"\n\n    outlet\n    {\n        type            inletOutlet;\n        inletValue      uniform ('+(null!=(r=o(l(2)).call(i,null!=(r=null!=n?n.U:n)?r.inletValue:r,{name:"../vector",hash:{},data:s}))?r:"")+");\n        value           $internalField;\n    }\n\n    bottomWall\n    {\n        type            fixedValue;\n        value           $internalField;\n    }\n\n    "+(null!=(r=e.lambda(null!=n?n.meshGroupName:n,n))?r:"")+'\n    {\n        type            noSlip;\n    }\n\n    #include "include/frontBackUpperPatches"\n}\n\n\n// ************************************************************************* //\n'},useData:!0})},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({1:function(e,n,t,o,a){var s;return"nu              ["+(null!=(s=function(e){return e&&(e.__esModule?e.default:e)}(l(2)).call(null!=n?n:e.nullContext||{},null!=(s=null!=(s=null!=n?n.transport:n)?s.nu:s)?s.dimensions:s,{name:"../vector",hash:{},data:a}))?s:"")+"] "+(null!=(s=e.lambda(null!=(s=null!=(s=null!=n?n.transport:n)?s.nu:s)?s.epsilon:s,n))?s:"")+";\n"},compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){var a;return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      transportProperties;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\ntransportModel  "+(null!=(a=e.lambda(null!=(a=null!=n?n.transport:n)?a.model:a,n))?a:"")+";\n\n"+(null!=(a=l.if.call(null!=n?n:e.nullContext||{},null!=(a=null!=n?n.transport:n)?a.nu:a,{name:"if",hash:{},fn:e.program(1,o,0),inverse:e.noop,data:o}))?a:"")+"// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      turbulenceProperties;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\nsimulationType RAS;\n\nRAS\n{\n    RASModel            kOmegaSST;\n\n    turbulence          on;\n\n    printCoeffs         on;\n}\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(1);function o(e){return e&&(e.__esModule?e.default:e)}e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,t,a,s){var r,i=null!=n?n:e.nullContext||{},u=e.escapeExpression,d=e.lambda;return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      blockMeshDict;\n}\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\nconvertToMeters 1;\n\nvertices\n(\n    ("+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,0,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,2,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,4,{name:"../item",hash:{},data:s}))+")\n    ("+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,1,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,2,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,4,{name:"../item",hash:{},data:s}))+")\n    ("+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,1,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,3,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,4,{name:"../item",hash:{},data:s}))+")\n    ("+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,0,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,3,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,4,{name:"../item",hash:{},data:s}))+")\n    ("+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,0,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,2,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,5,{name:"../item",hash:{},data:s}))+")\n    ("+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,1,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,2,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,5,{name:"../item",hash:{},data:s}))+")\n    ("+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,1,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,3,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,5,{name:"../item",hash:{},data:s}))+")\n    ("+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,0,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,3,{name:"../item",hash:{},data:s}))+" "+u(o(l(0)).call(i,null!=(r=null!=n?n.tunnel:n)?r.bounds:r,5,{name:"../item",hash:{},data:s}))+")\n);\n\nblocks\n(\n    hex (0 1 2 3 4 5 6 7) ("+(null!=(r=o(l(2)).call(i,null!=(r=null!=n?n.meshSize:n)?r.dimensions:r,{name:"../vector",hash:{},data:s}))?r:"")+") simpleGrading ("+(null!=(r=o(l(2)).call(i,null!=(r=null!=n?n.meshSize:n)?r.grading:r,{name:"../vector",hash:{},data:s}))?r:"")+")\n);\n\nedges\n(\n);\n\nboundary\n(\n    "+(null!=(r=d(null!=(r=null!=(r=null!=(r=null!=n?n.tunnel:n)?r.walls:r)?r.x:r)?r.plus:r,n))?r:"")+"\n    {\n        type "+u(o(l(4)).call(i,null!=(r=null!=(r=null!=(r=null!=n?n.tunnel:n)?r.walls:r)?r.x:r)?r.plus:r,{name:"../wallType",hash:{},data:s}))+";\n        faces\n        (\n          (2 6 5 1)\n        );\n    }\n    "+(null!=(r=d(null!=(r=null!=(r=null!=(r=null!=n?n.tunnel:n)?r.walls:r)?r.x:r)?r.minus:r,n))?r:"")+"\n    {\n        type "+u(o(l(4)).call(i,null!=(r=null!=(r=null!=(r=null!=n?n.tunnel:n)?r.walls:r)?r.x:r)?r.minus:r,{name:"../wallType",hash:{},data:s}))+";\n        faces\n        (\n          (0 4 7 3)\n        );\n    }\n    "+(null!=(r=d(null!=(r=null!=(r=null!=(r=null!=n?n.tunnel:n)?r.walls:r)?r.y:r)?r.plus:r,n))?r:"")+"\n    {\n        type "+u(o(l(4)).call(i,null!=(r=null!=(r=null!=(r=null!=n?n.tunnel:n)?r.walls:r)?r.y:r)?r.plus:r,{name:"../wallType",hash:{},data:s}))+";\n        faces\n        (\n          (3 7 6 2)\n        );\n    }\n    "+(null!=(r=d(null!=(r=null!=(r=null!=(r=null!=n?n.tunnel:n)?r.walls:r)?r.y:r)?r.minus:r,n))?r:"")+"\n    {\n        type "+u(o(l(4)).call(i,null!=(r=null!=(r=null!=(r=null!=n?n.tunnel:n)?r.walls:r)?r.y:r)?r.minus:r,{name:"../wallType",hash:{},data:s}))+";\n        faces\n        (\n          (1 5 4 0)\n        );\n    }\n    "+(null!=(r=d(null!=(r=null!=(r=null!=(r=null!=n?n.tunnel:n)?r.walls:r)?r.z:r)?r.plus:r,n))?r:"")+"\n    {\n        type "+u(o(l(4)).call(i,null!=(r=null!=(r=null!=(r=null!=n?n.tunnel:n)?r.walls:r)?r.z:r)?r.plus:r,{name:"../wallType",hash:{},data:s}))+";\n        faces\n        (\n          (4 5 6 7)\n        );\n    }\n    "+(null!=(r=d(null!=(r=null!=(r=null!=(r=null!=n?n.tunnel:n)?r.walls:r)?r.z:r)?r.minus:r,n))?r:"")+"\n    {\n        type "+u(o(l(4)).call(i,null!=(r=null!=(r=null!=(r=null!=n?n.tunnel:n)?r.walls:r)?r.z:r)?r.minus:r,{name:"../wallType",hash:{},data:s}))+";\n        faces\n        (\n          (0 3 2 1)\n        );\n    }\n);\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){var a,s=e.lambda;return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      controlDict;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\napplication     simpleFoam;\n\nstartFrom       latestTime;\n\nstartTime       "+(null!=(a=s(null!=(a=null!=n?n.controls:n)?a.startTime:a,n))?a:"")+";\n\nstopAt          endTime;\n\nendTime         "+(null!=(a=s(null!=(a=null!=n?n.controls:n)?a.endTime:a,n))?a:"")+";\n\ndeltaT          "+(null!=(a=s(null!=(a=null!=n?n.controls:n)?a.deltaT:a,n))?a:"")+";\n\nwriteControl    "+(null!=(a=s(null!=(a=null!=n?n.controls:n)?a.writeControl:a,n))?a:"")+";\n\nwriteInterval   "+(null!=(a=s(null!=(a=null!=n?n.controls:n)?a.writeInterval:a,n))?a:"")+";\n\npurgeWrite      "+(null!=(a=s(null!=(a=null!=n?n.controls:n)?a.purgeWrite:a,n))?a:"")+";\n\nwriteFormat     "+(null!=(a=s(null!=(a=null!=n?n.controls:n)?a.writeFormat:a,n))?a:"")+";\n\nwritePrecision  "+(null!=(a=s(null!=(a=null!=n?n.controls:n)?a.writePrecision:a,n))?a:"")+";\n\nwriteCompression "+(null!=(a=s(null!=(a=null!=n?n.controls:n)?a.writeCompression:a,n))?a:"")+";\n\ntimeFormat      "+(null!=(a=s(null!=(a=null!=n?n.controls:n)?a.timeFormat:a,n))?a:"")+";\n\ntimePrecision   "+(null!=(a=s(null!=(a=null!=n?n.controls:n)?a.timePrecision:a,n))?a:"")+";\n\nrunTimeModifiable "+(null!=(a=s(null!=(a=null!=n?n.controls:n)?a.runTimeModifiable:a,n))?a:"")+';\n\nfunctions\n{\n    #include "forceCoeffs"\n}\n\n\n// ************************************************************************* //\n'},useData:!0})},function(e,n,l){var t=l(1);function o(e){return e&&(e.__esModule?e.default:e)}e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,t,a,s){var r,i=e.lambda,u=null!=n?n:e.nullContext||{};return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      decomposeParDict;\n}\n\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\nnumberOfSubdomains "+(null!=(r=i(null!=(r=null!=n?n.decompose:n)?r.numberOfSubdomains:r,n))?r:"")+";\n\nmethod          "+(null!=(r=i(null!=(r=null!=n?n.decompose:n)?r.method:r,n))?r:"")+";\n\nsimpleCoeffs\n{\n    n               ("+(null!=(r=o(l(2)).call(u,null!=(r=null!=(r=null!=n?n.decompose:n)?r.simpleCoeffs:r)?r.n:r,{name:"../vector",hash:{},data:s}))?r:"")+");\n    delta           "+(null!=(r=i(null!=(r=null!=(r=null!=n?n.decompose:n)?r.simpleCoeffs:r)?r.delta:r,n))?r:"")+";\n}\n\nhierarchicalCoeffs\n{\n    n               ("+(null!=(r=o(l(2)).call(u,null!=(r=null!=(r=null!=n?n.decompose:n)?r.hierarchicalCoeffs:r)?r.n:r,{name:"../vector",hash:{},data:s}))?r:"")+");\n    delta           "+(null!=(r=i(null!=(r=null!=(r=null!=n?n.decompose:n)?r.hierarchicalCoeffs:r)?r.delta:r,n))?r:"")+";\n    order           "+(null!=(r=i(null!=(r=null!=(r=null!=n?n.decompose:n)?r.hierarchicalCoeffs:r)?r.order:r,n))?r:"")+';\n}\n\nmanualCoeffs\n{\n    dataFile        "cellDecomposition";\n}\n\n\n// ************************************************************************* //\n'},useData:!0})},function(e,n,l){var t=l(1);function o(e){return e&&(e.__esModule?e.default:e)}e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,t,a,s){var r,i=e.lambda,u=null!=n?n:e.nullContext||{};return'/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\n\nforceCoeffs1\n{\n    type        forceCoeffs;\n\n    libs ( "libforces.so" );\n\n    writeControl   '+(null!=(r=i(null!=(r=null!=n?n.forceCoeffs:n)?r.writeControl:r,n))?r:"")+";\n    timeInterval   "+(null!=(r=i(null!=(r=null!=n?n.forceCoeffs:n)?r.timeInterval:r,n))?r:"")+";\n\n    log            "+(null!=(r=i(null!=(r=null!=n?n.forceCoeffs:n)?r.log:r,n))?r:"")+";\n\n    patches     ("+(null!=(r=o(l(2)).call(u,null!=(r=null!=n?n.forceCoeffs:n)?r.patches:r,{name:"../vector",hash:{},data:s}))?r:"")+");\n    rho         rhoInf;      // Indicates incompressible\n    rhoInf      1;           // Redundant for incompressible\n    liftDir     ("+(null!=(r=o(l(2)).call(u,null!=(r=null!=n?n.forceCoeffs:n)?r.liftDir:r,{name:"../vector",hash:{},data:s}))?r:"")+");\n    dragDir     ("+(null!=(r=o(l(2)).call(u,null!=(r=null!=n?n.forceCoeffs:n)?r.dragDir:r,{name:"../vector",hash:{},data:s}))?r:"")+");\n    CofR        ("+(null!=(r=o(l(2)).call(u,null!=(r=null!=n?n.forceCoeffs:n)?r.CofR:r,{name:"../vector",hash:{},data:s}))?r:"")+");\n    pitchAxis   ("+(null!=(r=o(l(2)).call(u,null!=(r=null!=n?n.forceCoeffs:n)?r.pitchAxis:r,{name:"../vector",hash:{},data:s}))?r:"")+");\n    magUInf     "+(null!=(r=i(null!=(r=null!=n?n.forceCoeffs:n)?r.magUInf:r,n))?r:"")+";\n    lRef        "+(null!=(r=i(null!=(r=null!=n?n.forceCoeffs:n)?r.lRef:r,n))?r:"")+";\n    Aref        "+(null!=(r=i(null!=(r=null!=n?n.forceCoeffs:n)?r.Aref:r,n))?r:"")+";\n    /*\n    binData\n    {\n        nBin        20;          // output data into 20 bins\n        direction   (1 0 0);     // bin direction\n        cumulative  yes;\n    }\n    */\n}\n\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      fvSchemes;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\nddtSchemes\n{\n    default         steadyState;\n}\n\ngradSchemes\n{\n    default         Gauss linear;\n    grad(U)         cellLimited Gauss linear 1;\n}\n\ndivSchemes\n{\n    default         none;\n    div(phi,U)      bounded Gauss linearUpwindV grad(U);\n    div(phi,k)      bounded Gauss upwind;\n    div(phi,omega)  bounded Gauss upwind;\n    div((nuEff*dev2(T(grad(U))))) Gauss linear;\n}\n\nlaplacianSchemes\n{\n    default         Gauss linear corrected;\n}\n\ninterpolationSchemes\n{\n    default         linear;\n}\n\nsnGradSchemes\n{\n    default         corrected;\n}\n\nwallDist\n{\n    method meshWave;\n}\n\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){var a,s=e.lambda;return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      fvSolution;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\nsolvers\n{\n    p\n    {\n        solver           "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.p:a)?a.solver:a,n))?a:"")+";\n        tolerance        "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.p:a)?a.tolerance:a,n))?a:"")+";\n        relTol           "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.p:a)?a.relTol:a,n))?a:"")+";\n        smoother         "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.p:a)?a.smoother:a,n))?a:"")+";\n    }\n\n    Phi\n    {\n        $p;\n    }\n\n    U\n    {\n        solver           "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.U:a)?a.solver:a,n))?a:"")+";\n        smoother         "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.U:a)?a.smoother:a,n))?a:"")+";\n        tolerance        "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.U:a)?a.tolerance:a,n))?a:"")+";\n        relTol           "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.U:a)?a.relTol:a,n))?a:"")+";\n        nSweeps          "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.U:a)?a.nSweeps:a,n))?a:"")+";\n    }\n\n    k\n    {\n        solver           "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.k:a)?a.solver:a,n))?a:"")+";\n        smoother         "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.k:a)?a.smoother:a,n))?a:"")+";\n        tolerance        "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.k:a)?a.tolerance:a,n))?a:"")+";\n        relTol           "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.k:a)?a.relTol:a,n))?a:"")+";\n        nSweeps          "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.k:a)?a.nSweeps:a,n))?a:"")+";\n    }\n\n    omega\n    {\n        solver           "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.omega:a)?a.solver:a,n))?a:"")+";\n        smoother         "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.omega:a)?a.smoother:a,n))?a:"")+";\n        tolerance        "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.omega:a)?a.tolerance:a,n))?a:"")+";\n        relTol           "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.omega:a)?a.relTol:a,n))?a:"")+";\n        nSweeps          "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.solvers:n)?a.omega:a)?a.nSweeps:a,n))?a:"")+";\n    }\n}\n\nSIMPLE\n{\n    nNonOrthogonalCorrectors  "+(null!=(a=s(null!=(a=null!=(a=null!=(a=null!=n?n.solvers:n)?a.correctors:a)?a.simple:a)?a.nNonOrthogonalCorrectors:a,n))?a:"")+";\n    consistent                "+(null!=(a=s(null!=(a=null!=(a=null!=(a=null!=n?n.solvers:n)?a.correctors:a)?a.simple:a)?a.consistent:a,n))?a:"")+";\n}\n\npotentialFlow\n{\n    nNonOrthogonalCorrectors  "+(null!=(a=s(null!=(a=null!=(a=null!=(a=null!=n?n.solvers:n)?a.correctors:a)?a.potentialFlow:a)?a.nNonOrthogonalCorrectors:a,n))?a:"")+";\n}\n\nrelaxationFactors\n{\n    equations\n    {\n        U               "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.relaxationFactors:n)?a.equations:a)?a.U:a,n))?a:"")+";\n        k               "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.relaxationFactors:n)?a.equations:a)?a.k:a,n))?a:"")+";\n        omega           "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.relaxationFactors:n)?a.equations:a)?a.omega:a,n))?a:"")+";\n    }\n}\n\ncache\n{\n    grad(U);\n}\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){var a;return'/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      meshQualityDict;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\n// Include defaults parameters from master dictionary\n#includeEtc "caseDicts/meshQualityDict"\n\n//- minFaceWeight (0 -> 0.5)\nminFaceWeight   '+(null!=(a=e.lambda(null!=(a=null!=n?n.meshQuality:n)?a.minFaceWeight:a,n))?a:"")+";\n\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(1);function o(e){return e&&(e.__esModule?e.default:e)}e.exports=(t.default||t).template({1:function(e,n,l,t,o){var a;return(null!=(a=e.lambda(n,n))?a:"")+" true;\n"},compiler:[7,">= 4.0.0"],main:function(e,n,t,a,s){var r,i=null!=n?n:e.nullContext||{},u=e.lambda;return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      snappyHexMeshDict;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\n// Which of the steps to run\n"+(null!=(r=t.each.call(i,null!=(r=null!=n?n.hexMesh:n)?r.steps:r,{name:"each",hash:{},fn:e.program(1,s,0),inverse:e.noop,data:s}))?r:"")+"\n// Geometry. Definition of all surfaces. All surfaces are of class\n// searchableSurface.\n// Surfaces are used\n// - to specify refinement for any mesh cell intersecting it\n// - to specify refinement for any mesh cell inside/outside/near\n// - to 'snap' the mesh boundary to the surface\ngeometry\n{\n    "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.geometry:r)?r.name:r,n))?r:"")+".obj\n    {\n        type triSurfaceMesh;\n        name "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.geometry:r)?r.name:r,n))?r:"")+";\n    }\n\n    refinementBox\n    {\n        type "+(null!=(r=u(null!=(r=null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.geometry:r)?r.refinementBox:r)?r.type:r,n))?r:"")+";\n        min ("+(null!=(r=o(l(2)).call(i,null!=(r=null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.geometry:r)?r.refinementBox:r)?r.min:r,{name:"../vector",hash:{},data:s}))?r:"")+");\n        max ("+(null!=(r=o(l(2)).call(i,null!=(r=null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.geometry:r)?r.refinementBox:r)?r.max:r,{name:"../vector",hash:{},data:s}))?r:"")+");\n    }\n};\n\n\n\n// Settings for the castellatedMesh generation.\ncastellatedMeshControls\n{\n\n    // Refinement parameters\n    // ~~~~~~~~~~~~~~~~~~~~~\n\n    // If local number of cells is >= maxLocalCells on any processor\n    // switches from from refinement followed by balancing\n    // (current method) to (weighted) balancing before refinement.\n    maxLocalCells "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.castellatedMeshControls:r)?r.maxLocalCells:r,n))?r:"")+";\n\n    // Overall cell limit (approximately). Refinement will stop immediately\n    // upon reaching this number so a refinement level might not complete.\n    // Note that this is the number of cells before removing the part which\n    // is not 'visible' from the keepPoint. The final number of cells might\n    // actually be a lot less.\n    maxGlobalCells "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.castellatedMeshControls:r)?r.maxGlobalCells:r,n))?r:"")+";\n\n    // The surface refinement loop might spend lots of iterations refining just a\n    // few cells. This setting will cause refinement to stop if <= minimumRefine\n    // are selected for refinement. Note: it will at least do one iteration\n    // (unless the number of cells to refine is 0)\n    minRefinementCells "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.castellatedMeshControls:r)?r.minRefinementCells:r,n))?r:"")+";\n\n    // Allow a certain level of imbalance during refining\n    // (since balancing is quite expensive)\n    // Expressed as fraction of perfect balance (= overall number of cells /\n    // nProcs). 0=balance always.\n    maxLoadUnbalance "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.castellatedMeshControls:r)?r.maxLoadUnbalance:r,n))?r:"")+";\n\n\n    // Number of buffer layers between different levels.\n    // 1 means normal 2:1 refinement restriction, larger means slower\n    // refinement.\n    nCellsBetweenLevels "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.castellatedMeshControls:r)?r.nCellsBetweenLevels:r,n))?r:"")+';\n\n\n\n    // Explicit feature edge refinement\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    // Specifies a level for any cell intersected by its edges.\n    // This is a featureEdgeMesh, read from constant/triSurface for now.\n    features\n    (\n        {\n            file "'+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.geometry:r)?r.name:r,n))?r:"")+".eMesh\";\n            level 6;\n        }\n    );\n\n\n\n    // Surface based refinement\n    // ~~~~~~~~~~~~~~~~~~~~~~~~\n\n    // Specifies two levels for every surface. The first is the minimum level,\n    // every cell intersecting a surface gets refined up to the minimum level.\n    // The second level is the maximum level. Cells that 'see' multiple\n    // intersections where the intersections make an\n    // angle > resolveFeatureAngle get refined up to the maximum level.\n\n    refinementSurfaces\n    {\n        "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.geometry:r)?r.name:r,n))?r:"")+"\n        {\n            // Surface-wise min and max refinement level\n            level (5 6);\n\n            // Optional specification of patch type (default is wall). No\n            // constraint types (cyclic, symmetry) etc. are allowed.\n            patchInfo\n            {\n                type wall;\n                inGroups ("+(null!=(r=u(null!=n?n.meshGroupName:n,n))?r:"")+");\n            }\n        }\n    }\n\n    // Resolve sharp angles\n    resolveFeatureAngle "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.castellatedMeshControls:r)?r.resolveFeatureAngle:r,n))?r:"")+";\n\n\n    // Region-wise refinement\n    // ~~~~~~~~~~~~~~~~~~~~~~\n\n    // Specifies refinement level for cells in relation to a surface. One of\n    // three modes\n    // - distance. 'levels' specifies per distance to the surface the\n    //   wanted refinement level. The distances need to be specified in\n    //   descending order.\n    // - inside. 'levels' is only one entry and only the level is used. All\n    //   cells inside the surface get refined up to the level. The surface\n    //   needs to be closed for this to be possible.\n    // - outside. Same but cells outside.\n\n    refinementRegions\n    {\n        refinementBox\n        {\n            mode inside;\n            levels ((1E15 4));\n        }\n    }\n\n\n    // Mesh selection\n    // ~~~~~~~~~~~~~~\n\n    // After refinement patches get added for all refinementSurfaces and\n    // all cells intersecting the surfaces get put into these patches. The\n    // section reachable from the locationInMesh is kept.\n    // NOTE: This point should never be on a face, always inside a cell, even\n    // after refinement.\n    locationInMesh ("+(null!=(r=o(l(2)).call(i,null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.castellatedMeshControls:r)?r.locationInMesh:r,{name:"../vector",hash:{},data:s}))?r:"")+");\n\n\n    // Whether any faceZones (as specified in the refinementSurfaces)\n    // are only on the boundary of corresponding cellZones or also allow\n    // free-standing zone faces. Not used if there are no faceZones.\n    allowFreeStandingZoneFaces "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.castellatedMeshControls:r)?r.allowFreeStandingZoneFaces:r,n))?r:"")+";\n}\n\n\n\n// Settings for the snapping.\nsnapControls\n{\n    //- Number of patch smoothing iterations before finding correspondence\n    //  to surface\n    nSmoothPatch "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.snapControls:r)?r.nSmoothPatch:r,n))?r:"")+";\n\n    //- Relative distance for points to be attracted by surface feature point\n    //  or edge. True distance is this factor times local\n    //  maximum edge length.\n    tolerance "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.snapControls:r)?r.tolerance:r,n))?r:"")+";\n\n    //- Number of mesh displacement relaxation iterations.\n    nSolveIter "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.snapControls:r)?r.nSolveIter:r,n))?r:"")+";\n\n    //- Maximum number of snapping relaxation iterations. Should stop\n    //  before upon reaching a correct mesh.\n    nRelaxIter "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.snapControls:r)?r.nRelaxIter:r,n))?r:"")+";\n\n    // Feature snapping\n\n        //- Number of feature edge snapping iterations.\n        //  Leave out altogether to disable.\n        nFeatureSnapIter "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.snapControls:r)?r.nFeatureSnapIter:r,n))?r:"")+";\n\n        //- Detect (geometric only) features by sampling the surface\n        //  (default=false).\n        implicitFeatureSnap "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.snapControls:r)?r.implicitFeatureSnap:r,n))?r:"")+";\n\n        //- Use castellatedMeshControls::features (default = true)\n        explicitFeatureSnap "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.snapControls:r)?r.explicitFeatureSnap:r,n))?r:"")+";\n\n        //- Detect points on multiple surfaces (only for explicitFeatureSnap)\n        multiRegionFeatureSnap "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.snapControls:r)?r.multiRegionFeatureSnap:r,n))?r:"")+";\n}\n\n\n\n// Settings for the layer addition.\naddLayersControls\n{\n    // Are the thickness parameters below relative to the undistorted\n    // size of the refined cell outside layer (true) or absolute sizes (false).\n    relativeSizes "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.relativeSizes:r,n))?r:"")+';\n\n    // Per final patch (so not geometry!) the layer information\n    layers\n    {\n        "(bottomWall|'+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.geometry:r)?r.name:r,n))?r:"")+').*"\n        {\n            nSurfaceLayers 1;\n        }\n    }\n\n    // Expansion factor for layer mesh\n    expansionRatio '+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.expansionRatio:r,n))?r:"")+";\n\n    // Wanted thickness of final added cell layer. If multiple layers\n    // is the thickness of the layer furthest away from the wall.\n    // Relative to undistorted size of cell outside layer.\n    // See relativeSizes parameter.\n    finalLayerThickness "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.finalLayerThickness:r,n))?r:"")+";\n\n    // Minimum thickness of cell layer. If for any reason layer\n    // cannot be above minThickness do not add layer.\n    // Relative to undistorted size of cell outside layer.\n    minThickness "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.minThickness:r,n))?r:"")+";\n\n    // If points get not extruded do nGrow layers of connected faces that are\n    // also not grown. This helps convergence of the layer addition process\n    // close to features.\n    // Note: changed(corrected) w.r.t 17x! (didn't do anything in 17x)\n    nGrow "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.nGrow:r,n))?r:"")+";\n\n    // Advanced settings\n\n    // When not to extrude surface. 0 is flat surface, 90 is when two faces\n    // are perpendicular\n    featureAngle "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.featureAngle:r,n))?r:"")+";\n\n    // At non-patched sides allow mesh to slip if extrusion direction makes\n    // angle larger than slipFeatureAngle.\n    slipFeatureAngle "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.slipFeatureAngle:r,n))?r:"")+";\n\n    // Maximum number of snapping relaxation iterations. Should stop\n    // before upon reaching a correct mesh.\n    nRelaxIter "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.nRelaxIter:r,n))?r:"")+";\n\n    // Number of smoothing iterations of surface normals\n    nSmoothSurfaceNormals "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.nSmoothSurfaceNormals:r,n))?r:"")+";\n\n    // Number of smoothing iterations of interior mesh movement direction\n    nSmoothNormals "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.nSmoothNormals:r,n))?r:"")+";\n\n    // Smooth layer thickness over surface patches\n    nSmoothThickness "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.nSmoothThickness:r,n))?r:"")+";\n\n    // Stop layer growth on highly warped cells\n    maxFaceThicknessRatio "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.maxFaceThicknessRatio:r,n))?r:"")+";\n\n    // Reduce layer growth where ratio thickness to medial\n    // distance is large\n    maxThicknessToMedialRatio "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.maxThicknessToMedialRatio:r,n))?r:"")+";\n\n    // Angle used to pick up medial axis points\n    // Note: changed(corrected) w.r.t 17x! 90 degrees corresponds to 130 in 17x.\n    minMedianAxisAngle "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.minMedianAxisAngle:r,n))?r:"")+";\n\n\n    // Create buffer region for new layer terminations\n    nBufferCellsNoExtrude "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.nBufferCellsNoExtrude:r,n))?r:"")+";\n\n\n    // Overall max number of layer addition iterations. The mesher will exit\n    // if it reaches this number of iterations; possibly with an illegal\n    // mesh.\n    nLayerIter "+(null!=(r=u(null!=(r=null!=(r=null!=n?n.hexMesh:n)?r.addLayersControls:r)?r.nLayerIter:r,n))?r:"")+';\n}\n\n\n\n// Generic mesh quality settings. At any undoable phase these determine\n// where to undo.\nmeshQualityControls\n{\n    #include "meshQualityDict"\n\n\n    // Advanced\n\n    //- Number of error distribution iterations\n    nSmoothScale 4;\n    //- Amount to scale back displacement at error points\n    errorReduction 0.75;\n}\n\n\n// Advanced\n\n// Write flags\nwriteFlags\n(\n    scalarLevels\n    layerSets\n    layerFields     // write volScalarField for layer coverage\n);\n\n\n// Merge tolerance. Is fraction of overall bounding box of initial mesh.\n// Note: the write tolerance needs to be higher than this.\nmergeTolerance 1e-6;\n\n\n// ************************************************************************* //\n'},useData:!0})},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){var a;return"/*--------------------------------*- C++ -*----------------------------------*\\\n| =========                 |                                                 |\n| \\\\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |\n|  \\\\    /   O peration     | Version:  4.1                                   |\n|   \\\\  /    A nd           | Web:      www.OpenFOAM.org                      |\n|    \\\\/     M anipulation  |                                                 |\n\\*---------------------------------------------------------------------------*/\nFoamFile\n{\n    version     2.0;\n    format      ascii;\n    class       dictionary;\n    object      surfaceFeatureExtractDict;\n}\n// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //\n\n"+(null!=(a=e.lambda(null!=(a=null!=(a=null!=n?n.hexMesh:n)?a.geometry:a)?a.name:a,n))?a:"")+".obj\n{\n    // How to obtain raw features (extractFromFile || extractFromSurface)\n    extractionMethod    extractFromSurface;\n\n    extractFromSurfaceCoeffs\n    {\n        // Mark edges whose adjacent surface normals are at an angle less\n        // than includedAngle as features\n        // - 0  : selects no edges\n        // - 180: selects all edges\n        includedAngle   150;\n    }\n\n    subsetFeatures\n    {\n        // Keep nonManifold edges (edges with >2 connected faces)\n        nonManifoldEdges       no;\n\n        // Keep open edges (edges with 1 connected face)\n        openEdges       yes;\n    }\n\n\n    // Write options\n\n        // Write features to obj format for postprocessing\n        writeObj                yes;\n}\n\n\n// ************************************************************************* //\n"},useData:!0})},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){return"#!/bin/sh\n\n# Source tutorial clean functions\n. $WM_PROJECT_DIR/bin/tools/CleanFunctions\n\n# remove surface and features\nrm -rf constant/extendedFeatureEdgeMesh > /dev/null 2>&1\nrm -f constant/triSurface/mesh.eMesh > /dev/null 2>&1\n\nrm -rf 0 > /dev/null 2>&1\n\ncleanCase\n"},useData:!0})},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){var a,s=e.lambda;return"#!/bin/sh\ncd ${0%/*} || exit 1    # Run from this directory\n\n# Source tutorial run functions\n. $WM_PROJECT_DIR/bin/tools/RunFunctions\n\n# copy mesh surface from root directory\nmkdir -p ./constant/triSurface\ncp "+(null!=(a=s(null!=(a=null!=(a=null!=n?n.hexMesh:n)?a.geometry:a)?a.name:a,n))?a:"")+".obj ./constant/triSurface/\n\nrunApplication surfaceFeatureExtract\n\nrunApplication blockMesh\n\nrunApplication decomposePar\nrunParallel snappyHexMesh -overwrite\n\n#- For non-parallel running\n#cp -r 0.orig 0 > /dev/null 2>&1\n\n#- For parallel running\nls -d processor* | xargs -I {} rm -rf ./{}/0\nls -d processor* | xargs -I {} cp -r 0.orig ./{}/0\n\nrunParallel patchSummary\nrunParallel potentialFoam\nrunParallel $(getApplication)\n\nrunApplication reconstructParMesh -constant\nrunApplication reconstructPar -latestTime\nrunApplication foamToVTK -allPatches -time "+(null!=(a=s(null!=(a=null!=n?n.controls:n)?a.startTime:a,n))?a:"")+":"+(null!=(a=s(null!=(a=null!=n?n.controls:n)?a.endTime:a,n))?a:"")+"\n#------------------------------------------------------------------------------\n"},useData:!0})},function(e,n,l){var t=l(1);e.exports=(t.default||t).template({compiler:[7,">= 4.0.0"],main:function(e,n,l,t,o){return"#!/bin/bash\n\ncd $1\n\n# Env setup\nsource /opt/OpenFOAM/OpenFOAM-v1612+/etc/bashrc\nexport PATH=$WM_THIRD_PARTY_DIR/platforms/linux64Gcc/qt-4.8.5/bin:$PATH\nexport LD_LIBRARY_PATH=/opt/OpenFOAM/ThirdParty-v1612+/platforms/linux64Gcc/ParaView-5.0.1/lib/paraview-5.0/mesa-llvm:$LD_LIBRARY_PATH\nexport LD_LIBRARY_PATH=/opt/OpenFOAM/ThirdParty-v1612+/platforms/linux64Gcc/ParaView-5.0.1/lib/paraview-5.0/lib:$LD_LIBRARY_PATH\nexport LD_LIBRARY_PATH=/opt/OpenFOAM/ThirdParty-v1612+/platforms/linux64Gcc/qt-4.8.5/lib:$LD_LIBRARY_PATH\nexport PATH=/opt/OpenFOAM/ThirdParty-v1612+/platforms/linux64Gcc/cmake-3.4.3/bin:$PATH\n\n# Tutorial example\n./Allrun\n"},useData:!0})}]);